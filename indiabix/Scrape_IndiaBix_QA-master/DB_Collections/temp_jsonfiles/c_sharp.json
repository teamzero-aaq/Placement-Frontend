{"test_questions": [[{"question": "Which of the following statements are correct about the C#.NET code snippet given below?\nint[ , ] intMyArr = {{7, 1, 3}, {2, 9, 6}};\nintMyArr represents rectangular array of 2 rows and 3 columns.\nintMyArr.GetUpperBound(1) will yield 2.\nintMyArr.Length will yield 24.\nintMyArr represents 1-D array of 5 integers.\nintMyArr.GetUpperBound(0) will yield 2.", "opta": "1, 2", "optb": "2, 3", "optc": "2, 5", "optd": "1, 4", "opte": "3, 4", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about the C#.NET code snippet given below?\n    int[] a = {11, 3, 5, 9, 4}; \nThe array elements are created on the stack.\nRefernce a is created on the stack.\nThe array elements are created on the heap.\nOn declaring the array a new array class is created which is derived from System.Array Class.\nWhether the array elements are stored in the stack or heap depends upon the size of the array.", "opta": "1, 2", "optb": "2, 3, 4", "optc": "2, 3, 5", "optd": "4, 5", "opte": "None of these", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which one of the following statements is correct?", "opta": "Array elements can be of integer type only.", "optb": "The rank of an Array is the total number of elements it can contain.", "optc": "The length of an Array is the number of dimensions in the Array.", "optd": "The default value of numeric array elements is zero.", "opte": "The Array elements are guaranteed to be sorted.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "If a is an array of 5 integers then which of the following is the correct way to increase its size to 10 elements?", "opta": "int[] a = new int[5]; \nint[] a = new int[10];", "optb": "int[] a = int[5]; \nint[] a = int[10];", "optc": "int[] a = new int[5]; \na.Length = 10 ;", "optd": "int[] a = new int[5]; \na = new int[10];", "opte": "int[] a = new int[5]; \na.GetUpperBound(10);", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "How will you complete the foreach loop in the C#.NET code snippet given below such that it correctly prints all elements of the array a?\n    int[][]a = new int[2][];\n    a[0] = new int[4]{6, 1 ,4, 3};\n    a[1] = new int[3]{9, 2, 7}; \n    foreach (int[ ] i in a)\n    {\n        /* Add loop here */\n        Console.Write(j + \" \");\n        Console.WriteLine(); \n    }", "opta": "foreach (int j = 1; j < a(0).GetUpperBound; j++)", "optb": "foreach (int j = 1; j < a.GetUpperBound (0); j++)", "optc": "foreach (int j in a.Length)", "optd": "foreach (int j in i)", "opte": "foreach (int j in a.Length -1)", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is the correct output of the C#.NET code snippet given below?\n    int[ , , ] a = new int[ 3, 2, 3 ]; \n    Console.WriteLine(a.Length);", "opta": "20", "optb": "4", "optc": "18", "optd": "10", "opte": "5", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about arrays used in C#.NET?\nArrays can be rectangular or jagged.\nRectangular arrays  have  similar rows  stored  in  adjacent memory locations.\nJagged arrays do not have an access to the methods of System.Array Class.\nRectangular arrays do not have an access to the methods of System.Array Class.\nJagged arrays have dissimilar rows stored in non-adjacent memory locations.", "opta": "1, 2", "optb": "1, 3, 5", "optc": "3, 4", "optd": "1, 2, 5", "opte": "4, 5", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about the C#.NET code snippet given below?\n   int[][]intMyArr = new int[2][]; \n   intMyArr[0] = new int[4]{6, 1, 4, 3}; \n   intMyArr[1] = new int[3]{9, 2, 7};", "opta": "intMyArr is a reference to a 2-D jagged array.", "optb": "The two rows of the jagged array intMyArr are stored in adjacent memory locations.", "optc": "intMyArr[0] refers to the zeroth 1-D array and intMyArr[1] refers to the first 1-D array.", "optd": "intMyArr refers to intMyArr[0] and intMyArr[1].", "opte": "intMyArr refers to intMyArr[1] and intMyArr[2].", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following are the correct ways to define an array of 2 rows and 3 columns?\n\nint[ , ] a;\na = new int[2, 3]{{7, 1, 3},{2, 9, 6}};\n\nint[ , ] a;\na = new int[2, 3]{};\n\nint[ , ] a = {{7, 1, 3}, {2, 9,6 }};\n\nint[ , ] a;\na = new int[1, 2];\n\nint[ , ] a;\na = new int[1, 2]{{7, 1, 3}, {2, 9, 6}};", "opta": "1, 2 , 3", "optb": "1, 3", "optc": "2, 3", "optd": "2, 4, 5", "opte": "4, 5", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about the array declaration given below?\n   int[][][] intMyArr = new int[2][][];", "opta": "intMyArr refers to a 2-D jagged array containing 2 rows.", "optb": "intMyArr refers to a 2-D jagged array containing 3 rows.", "optc": "intMyArr refers to a 3-D jagged array containing 2 2-D jagged arrays.", "optd": "intMyArr refers to a 3-D jagged array containing three 2-D jagged arrays.", "opte": "intMyArr refers to a 3-D jagged array containing 2 2-D rectangular arrays.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about the C#.NET code snippet given below?\n    int[] intMyArr = {11, 3, 5, 9, 4};", "opta": "intMyArr is a reference to an object of System.Array Class.", "optb": "intMyArr is a reference to an object of a class that the compiler derives from System.Array Class.", "optc": "intMyArr is a reference to an array of integers.", "optd": "intMyArr is a reference to an object created on the stack.", "opte": "intMyArr is a reference to the array created on the stack.", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is the correct way to define and initialise an array of 4 integers?\n\nint[] a = {25, 30, 40, 5};\n\nint[] a;\na = new int[3];\na[0] = 25;\na[1] = 30;\na[2] = 40;\na[3] = 5;\n\nint[] a;\na = new int{25, 30, 40, 5};\n\nint[] a;\na = new int[4]{25, 30, 40, 5};\n\nint[] a;\na = new int[4];\na[0] = 25;\na[1] = 30;\na[2] = 40;\na[3] = 5;", "opta": "1, 2", "optb": "3, 4", "optc": "1, 4, 5", "optd": "2, 4, 5", "opte": "2, 5", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is the correct output of the C#.NET code snippet given below?\n    int[][] a = new int[2][];\n    a[0] = new int[4]{6, 1, 4, 3};\n    a[1] = new int[3]{9, 2, 7}; \n    Console.WriteLine(a[1].GetUpperBound(0));", "opta": "3", "optb": "4", "optc": "7", "optd": "9", "opte": "2", "ans": "E", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is the correct way to obtain the number of elements present in the array given below?\n    int[] intMyArr = {25, 30, 45, 15, 60};\nintMyArr.GetMax;\nintMyArr.Highest(0);\nintMyArr.GetUpperBound(0);\nintMyArr.Length;\nintMyArr.GetMaxElements(0);", "opta": "1, 2", "optb": "3, 4", "optc": "3, 5", "optd": "1, 5", "opte": "4, 5", "ans": "B", "explanation": "using System;\n    \npublic class Test\n{ \n   public static void Main()\n   { \n        int[] intMyArr = { 25, 30, 45, 15, 60, 78, 99 };\n        Console.WriteLine(intMyArr.Length);\n        Console.WriteLine(intMyArr.GetUpperBound(0)+1);\n   } \n}\n/* \nOutput : \n7 \n7 \n*/"}, {"question": "What will be the output of the C#.NET code snippet given below?\nnamespace IndiabixConsoleApplication\n{\n    class SampleProgram\n    {\n        static void Main(string[ ] args)\n        {\n            int i, j;\n            int[ , ] arr = new int[ 2, 2 ];\n            for(i = 0; i < 2; ++i)\n            {\n                for(j = 0; j < 2; ++j)\n                {\n                    arr[i, j] = i * 17 + i * 17;\n                    Console.Write(arr[ i, j ] + \" \");\n                }\n            }\n        }\n    }\n}", "opta": "0 0 34 34", "optb": "0 0 17 17", "optc": "0 0 0 0", "optd": "17 17 0 0", "opte": "34 34 0 0", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "The [Serializable()] attribute gets inspected at", "opta": "Compile-time", "optb": "Run-time", "optc": "Design-time", "optd": "Linking-time", "opte": "None of the above", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following are correct ways to specify the targets for a custom attribute?", "opta": "By applying AttributeUsage to the custom attribute's class definition.", "optb": "By applying UsageAttribute to the custom attribute's class definition.", "optc": "Once an attribute is declared it applies to all the targets.", "optd": "By applying AttributeUsageAttribute to the custom attribute's class definition.", "opte": "None of the above.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following are correct ways to pass a parameter to an attribute?\nBy value\nBy reference\nBy address\nBy position\nBy name", "opta": "1, 2", "optb": "1, 2, 3", "optc": "4, 5", "optd": "All of the above", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about inspecting an attribute in C#.NET?\nAn attribute can be inspected at link-time.\nAn attribute can be inspected at compile-time.\nAn attribute can be inspected at run-time.\nAn attribute can be inspected at design-time.", "opta": "1, 2", "optb": "3, 4", "optc": "1, 3, 4", "optd": "All of the above", "opte": "None of the above", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is correct ways of applying an attribute?", "opta": "[WebService (Name = \"IndiaBIX\", Description = \"BIX WebService\")] \nclass AuthenticationService: WebService\n{ /* .... */}", "optb": "<WebService ( Name : \"IndiaBIX\", Description : \"BIX WebService\" )> \nclass AuthenticationService: inherits WebService\n{ /* .... */}", "optc": "<WebService ( Name = \"IndiaBIX\", Description = \"BIX WebService\" )> \nclass AuthenticationService: extends WebService\n{ /* .... */}", "optd": "[WebService ( Name := \"IndiaBIX\", Description := \"BIX WebService\")] \nclass AuthenticationService: inherits WebService\n{ /* .... */}", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about Attributes used in C#.NET?", "opta": "If there is a custom attribute BugFixAttribute then the compiler will look ONLY for the BugFix attribute in the code that uses this attribute.", "optb": "To create a custom attribute we need to create a custom attribute structure and derive it from System.Attribute.", "optc": "To create a custom attribute we need to create a class and implement IAttribute interface in it.", "optd": "If a BugFixAttribute is to receive three parameters then the BugFixAttribute class should implement a zero-argument constructor.", "opte": "The CLR can change the behaviour of the code depending upon the attributes applied to it.", "ans": "E", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following forms of applying an attribute is correct?", "opta": "< Serializable() > class sample\n{ /* ... */ }", "optb": "(Serializable()) class sample\n{ /* ... */ }", "optc": "[ Serializable() ] class sample\n{ /* ... */ }", "optd": "Serializablef) class sample\n{ /* ... */ }", "opte": "None of the above", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about Attributes in C#.NET?\nOn compiling a C#.NET program the attibutes applied are recorded in the metadata of the assembly.\nOn compilation all the attribute's tags are deleted from the program.\nIt is not possible to create custom attributes..\nThe attributes applied can be read from an assembly using Reflection class.\nAn attribute can have parameters.", "opta": "1 and 2 only", "optb": "2 and 4 only", "optc": "1, 4 and 5 only", "optd": "All of the above", "opte": "None of the above", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following correctly describes the contents of the filename AssemblyInfo.cs?", "opta": "It contains method-level attributes.", "optb": "It contains class-level attributes.", "optc": "It contains assembly-level attributes.", "optd": "It contains structure-level attributes.", "opte": "It contains namespace-level attributes.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "It possible to create a custom attribute that can be applied only to specific programming element(s) like ____ .", "opta": "Classes", "optb": "Methods", "optc": "Classes and Methods", "optd": "Classes, Methods and Member-Variables", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following CANNOT be a target for a custom attribute?", "opta": "Enum", "optb": "Event", "optc": "Delegate", "optd": "Interface", "opte": "Namespace", "ans": "E", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Once applied which of the following CANNOT inspect the applied attribute?", "opta": "CLR", "optb": "Linker", "optc": "ASP.NET Runtime", "optd": "Visual Studio.NET", "opte": "Language compilers", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is the correct way to apply an attribute to an Assembly?", "opta": "[ AssemblyDescription(\"DCube Component Library\") ]", "optb": "[ assembly : AssemblyDescription(\"DCube Component Library\") ]", "optc": "[ Assemblylnfo : AssemblyDescription(\"DCube Component Library\") ]", "optd": "< Assembly: AssemblyDescription(\"DCube Component Library\") >", "opte": "(Assembly: AssemblyDescription(\"DCube Component Library\"))", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is the correct way of applying the custom attribute called Tested which receives two-arguments - name of the tester and the testgrade?\nCustom attribute cannot be applied to an assembly.\n[assembly: Tested(\"Sachin\", testgrade.Good)]\n[Tested(\"Virat\", testgrade.Excellent)] class customer { /* .... */ }\nCustom attribute cannot be applied to a method.\nCustom attribute cannot be applied to a class.", "opta": "1 only", "optb": "1, 5", "optc": "2, 3", "optd": "4, 5", "opte": "None of the above", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Attributes can be applied to \nMethod \nClass\nAssembly\nNamespace\nEnum", "opta": "1 and 2 only", "optb": "1, 2 and 3", "optc": "4 and 5 only", "optd": "All of the above", "opte": "None of the above", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about the C#.NET code snippet given below?\nclass Student s1, s2; // Here 'Student' is a user-defined class.\ns1 = new Student(); \ns2 = new Student();", "opta": "Contents of s1 and s2 will be exactly same.", "optb": "The two objects will get created on the stack.", "optc": "Contents of the two objects created will be exactly same.", "optd": "The two objects will always be created in adjacent memory locations.", "opte": "We should use delete() to delete the two objects from memory.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about the C#.NET code snippet given below?\nclass Sample\n{\n    private int i;\n    public Single j;\n    private void DisplayData()\n    {\n        Console.WriteLine(i + \" \" + j);\n    }\n    public void ShowData()\n    {\n        Console.WriteLine(i + \" \" + j);\n    }\n}", "opta": "j cannot be declared as public.", "optb": "DisplayData() cannot be declared as private.", "optc": "DisplayData() cannot access j.", "optd": "ShowData() cannot access to i.", "opte": "There is no error in this class.", "ans": "E", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct?\nInstance members of a class can be accessed only through an object of that class.\nA class can contain only instance data and instance member function.\nAll objects created from a class will occupy equal number of bytes in memory.\nA class can contain Friend functions.\nA class is a blueprint or a template according to which objects are created.", "opta": "1, 3, 5", "optb": "2, 4", "optc": "3, 5", "optd": "2, 4, 5", "opte": "None of these", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct?", "opta": "Procedural Programming paradigm is different than structured programming paradigm.", "optb": "Object Oriented Programming paradigm stresses on dividing the logic into smaller parts and writing procedures for each part.", "optc": "Classes and objects are corner stones of structured programming paradigm.", "optd": "Object    Oriented    Programming    paradigm    gives    equal importance to data and the procedures that work on the data.", "opte": "C#.NET is a structured programming language.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is the correct way to create an object of the class Sample?\nSample s = new Sample();\nSample s;\nSample s; s = new Sample();\ns = new Sample();", "opta": "1, 3", "optb": "2, 4", "optc": "1, 2, 3", "optd": "1, 4", "opte": "None of these", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following will be the correct output for the C#.NET program given below?\nnamespace IndiabixConsoleApplication\n{ \n    class Sample\n    { \n        int i; \n        Single j; \n        public void SetData(int i, Single j)\n        { \n            i = i;\n            j = j;\n        }\n        public void Display()\n        { \n            Console.WriteLine(i + \" \" + j);\n        } \n    } \n    class MyProgram\n    { \n        static void Main(string[ ] args)\n        { \n            Sample s1 = new Sample();\n            s1.SetData(10, 5.4f); \n            s1.Display(); \n        } \n    } \n}", "opta": "0 0", "optb": "10 5.4", "optc": "10 5.400000", "optd": "10 5", "opte": "None of the above", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "The this reference gets created when a member function (non-shared) of a class is called.", "opta": "True", "optb": "False", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct?\nData members ofa class are by default public.\nData members of a class are by default private.\nMember functions of a class are by default public.\nA private function of a class can access a public function within the same class.\nMember function of a class are by default private.", "opta": "1, 3, 5", "optb": "1, 4", "optc": "2, 4, 5", "optd": "1, 2, 3", "opte": "None of these", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about the C#.NET code snippet given below?\nnamespace IndiabixConsoleApplication\n{ \n    class Sample\n    { \n        public int index; \n        public int[] arr = new int[10]; \n        \n        public void fun(int i, int val)\n        { \n            arr[i] = val;\n        }\n    }\n     \n    class MyProgram\n    { \n        static void Main(string[] args)\n        {\n            Sample s = new Sample(); \n            s.index = 20; \n            Sample.fun(1, 5); \n            s.fun(1, 5); \n        } \n    } \n}", "opta": "s.index = 20 will report an error since index is public.", "optb": "The call s.fun(1, 5) will work correctly.", "optc": "Sample.fun(1, 5) will set a value 5 in arr[ 1 ].", "optd": "The call Sample.fun(1, 5) cannot work since fun() is not a shared function.", "opte": "arr being a data member, we cannot declare it as public.", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about the C#.NET code snippet given below?\nsample c;\nc = new sample();\nIt will create an object called sample.\nIt will create a nameless object of the type sample.\nIt will create an object of the type sample on the stack.\nIt will create a reference c on the stack and an object of the type sample on the heap.\nIt will create an object of the type sample either on the heap or on the stack depending on the size of the object.", "opta": "1, 3", "optb": "2, 4", "optc": "3, 5", "optd": "4, 5", "opte": "None of these", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about the C#.NET code snippet given below?\nint i;\nint j = new int();\ni = 10;\nj = 20; \nString str; \nstr = i.ToString(); \nstr = j.ToString();", "opta": "This is a perfectly workable code snippet.", "optb": "Since int is a primitive, we cannot use new with it.", "optc": "Since an int is a primitive, we cannot call the method ToString() using it.", "optd": "i will get created on stack, whereas j will get created on heap.", "opte": "Both i and j will get created on heap.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about the this reference?\nthis reference can be modified in the instance member function of a class.\nStatic functions of a class never receive the this reference.\nInstance member functions of a class always receive a this reference.\nthis reference continues to exist even after control returns from an instance member function.\nWhile  calling an  instance  member function we  are  not required to pass the this reference explicitly.", "opta": "1, 4", "optb": "2, 3, 5", "optc": "3, 4", "optd": "2, 5", "opte": "None of these", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following will be the correct output for the C#.NET program given below?\nnamespace IndiabixConsoleApplication\n{ \n    class Sample\n    { \n        int i; \n        Single j; \n        public void SetData(int i, Single j)\n        { \n            this.i = i; \n            this.j = j;\n        }\n        public void Display()\n        { \n            Console.WriteLine(i + \" \" + j);\n        } \n    } \n    class MyProgram\n    { \n        static void Main(string[ ] args)\n        {\n            Sample s1 = new Sample(); \n            s1.SetData(36, 5.4f); \n            s1.Display(); \n        } \n    } \n}", "opta": "0 0.0", "optb": "36 5.4", "optc": "36 5.400000", "optd": "36 5", "opte": "None of the above", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about objects of a user-defined class called Sample?\nAll objects of Sample class will always have exactly same data.\nObjects of Sample class may have same or different data.\nWhether objects of Sample class will have same or different data depends upon a Project Setting made in Visual Studio.NET.\nConceptually, each object of Sample class will have instance data and instance member functions of the Sample class.\nAll objects of Sample class will share one copy of member functions.", "opta": "1, 3", "optb": "2, 4", "optc": "4, 5", "optd": "3, 5", "opte": "None of these", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about the C#.NET code snippet given below?\nnamespace IndiabixConsoleApplication\n{ \n    class Sample\n    { \n        int i, j; \n        public void SetData(int ii, int jj)\n        {\n            this.i = ii;\n            this.j = jj \n        } \n    } \n    class MyProgram\n    { \n        static void Main(string[ ] args)\n        { \n            Sample s1 = new Sample(); \n            s1.SetData(10, 2); \n            Sample s2 = new Sample(); \n            s2.SetData(5, 10); \n        } \n    } \n}", "opta": "The code will not compile since we cannot explicitly use this.", "optb": "Using this in this program is necessary to properly set the values in the object.", "optc": "The call to SetData() is wrong since we have not explicitly passed the this reference to it.", "optd": "The definition of SetData() is wrong since we have not explicitly collected the this reference.", "opte": "Contents of this will be different during each call to SetData().", "ans": "E", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about classes and objects in C#.NET?", "opta": "Class is a value type.", "optb": "Since objects are typically big in size, they are created on the stack.", "optc": "Objects of smaller size are created on the heap.", "optd": "Smaller objects that get created on the stack can be given names.", "opte": "Objects are always nameless.", "ans": "E", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about an ArrayList collection that implements the IEnumerable interface?\nThe ArrayList class contains an inner class that implements the IEnumerator interface.\nAn ArrayList Collection cannot be accessed simultaneously by different threads.\nThe inner class of ArrayList can access ArrayList class's members.\nTo access members of ArrayList from the inner class, it is necessary to pass ArrayList class's reference to it.\nEnumerator's of ArrayList Collection can manipulate the array.", "opta": "1 and 2 only", "optb": "1 and 3 and 4 only", "optc": "2 and 5 only", "optd": "All of the above", "opte": "None of the above", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "How many enumerators will exist if four threads are simultaneously working on an ArrayList object?", "opta": "1", "optb": "3", "optc": "2", "optd": "4", "opte": "Depends upon the Project Setting made in Visual Studio.NET.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "In which of the following collections is the Input/Output index-based?\nStack\nQueue\nBitArray\nArrayList\nHashTable", "opta": "1 and 2 only", "optb": "3 and 4 only", "optc": "5 only", "optd": "1, 2 and 5 only", "opte": "All of the above", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "In which of the following collections is the Input/Output based on a key?\nMap\nStack\nBitArray\nHashTable\nSortedList", "opta": "1 and 2 only", "optb": "2 and 3 only", "optc": "1, 2 and 3 only", "optd": "4 and 5 only", "opte": "All of the above", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "In a HashTable Key cannot be null, but Value can be.", "opta": "True", "optb": "False", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about the C#.NET code snippet given below?\nStack st = new Stack();\nst.Push(\"hello\");\nst.Push(8.2);\nst.Push(5);\nst.Push('b');\nst.Push(true);", "opta": "Dissimilar elements like \"hello\", 8.2, 5 cannot be stored in the same Stack collection.", "optb": "Boolean values can never be stored in Stack collection.", "optc": "In the fourth call to Push(), we should write \"b\" in place of 'b'.", "optd": "To store dissimilar elements in a Stack collection, a method PushAnyType() should be used in place of Push().", "opte": "This is a perfectly workable code.", "ans": "E", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about the Stack collection?\nIt can be used for evaluation of expressions.\nAll elements in the Stack collection can be accessed using an enumerator.\nIt is used to maintain a FIFO list.\nAll elements stored in a Stack collection must be of similar type.\nTop-most element of the Stack collection can be accessed using the Peek() method.", "opta": "1 and 2 only", "optb": "3 and 4 only", "optc": "1, 2 and 5 only", "optd": "All of the above", "opte": "None of the above", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "A HashTable t maintains a collection of names of states and capital city of each state. Which of the following is the correct way to find out whether \"Kerala\" state is present in this collection or not?", "opta": "t.ContainsKey(\"Kerala\");", "optb": "t.HasValue(\"Kerala\");", "optc": "t.HasKey(\"Kerala\");", "optd": "t.ContainsState(\"Kerala\");", "opte": "t.ContainsValue(\"Kerala\");", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is the correct way to access all elements of the Queue collection created using the C#.NET code snippet given below?\nQueue q = new Queue(); \nq.Enqueue(\"Sachin\"); \nq.Enqueue('A'); \nq.Enqueue(false); \nq.Enqueue(38); \nq.Enqueue(5.4);", "opta": "IEnumerator e;\ne = q.GetEnumerator(); \nwhile (e.MoveNext())\nConsole.WriteLine(e.Current);", "optb": "IEnumerable e;\ne = q.GetEnumerator(); \nwhile (e.MoveNext()) \nConsole.WriteLine(e.Current);", "optc": "IEnumerator e;\ne = q.GetEnumerable(); \nwhile (e.MoveNext()) \nConsole.WriteLine(e.Current);", "optd": "IEnumerator e;\ne = Queue.GetEnumerator(); \nwhile (e.MoveNext()) \nConsole.WriteLine(e.Current);", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which  of the following is NOT an interface declared  in System.Collections namespace?", "opta": "IComparer", "optb": "IEnumerable", "optc": "IEnumerator", "optd": "IDictionaryComparer", "opte": "IDictionaryEnumerator", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Suppose value of the Capacity property of ArrayList Collection is set to 4. What will be the capacity of the Collection on adding fifth element to it?", "opta": "4", "optb": "8", "optc": "16", "optd": "32", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is an ordered collection class?\nMap\nStack\nQueue\nBitArray\nHashTable", "opta": "1 only", "optb": "2 and 3 only", "optc": "4 and 5 only", "optd": "All of the above", "opte": "None of the above", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is the correct way to find out the number of elements currently present in an ArrayList Collection called arr?", "opta": "arr.Count", "optb": "arr.GrowSize", "optc": "arr.MaxIndex", "optd": "arr.Capacity", "opte": "arr.UpperBound", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about a HashTable collection?\n\nIt is a keyed collection.\nIt is a ordered collection.\nIt is an indexed collection.\nIt implements a IDictionaryEnumerator interface in its inner class.\nThe key - value pairs present in a HashTable can be accessed using the Keys and Values properties of the inner class that implements the IDictionaryEnumerator interface.", "opta": "1 and 2 only", "optb": "1, 2 and 3 only", "optc": "4 and 5 only", "optd": "1, 4 and 5 only", "opte": "All of the above", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is the correct way to access all elements of the Stack collection created using the C#.NET code snippet given below?\nStack st = new Stack();\nst.Push(11);\nst.Push(22);\nst.Push(-53);\nst.Push(33);\nst.Push(66);", "opta": "IEnumerable e;\ne = st.GetEnumerator(); \nwhile (e.MoveNext())\nConsole.WriteLine(e.Current);", "optb": "IEnumerator e;\ne = st.GetEnumerable(); \nwhile (e.MoveNext())\nConsole.WriteLine(e.Current);", "optc": "IEnumerator e;\ne = st.GetEnumerator(); \nwhile (e.MoveNext()) \nConsole.WriteLine(e.Current);", "optd": "IEnumerator e;\ne = Stack.GetEnumerator(); \nwhile (e.MoveNext()) \nConsole.WriteLine(e.Current);", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about the Collection Classes available in Framework Class Library?", "opta": "Elements of a collection cannot be transmitted over a network.", "optb": "Elements stored in a collection can be retrieved but cannot be modified.", "optc": "It is not easy to adopt the existing Collection classes for newtype of objects.", "optd": "Elements stored in a collection can be modified only if allelements are of similar types.", "opte": "They  use  efficient algorithms to  manage  the  collection, thereby improving the performance of the program.", "ans": "E", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct?", "opta": "A constructor can be used to set default values and limit instantiation.", "optb": "C# provides a copy constructor.", "optc": "Destructors are used with classes as well as structures.", "optd": "A class can have more than one destructor.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about the C#.NET code snippet given below?\nnamespace IndiabixConsoleApplication\n{ \n    class Sample\n    { \n        public int func()\n        {\n            return 1;\n        } \n        public Single func()\n        { \n            return 2.4f ;\n        } \n    } \n    class Program\n    { \n        static void Main(string[ ] args)\n        {\n            Sample s1 = new Sample(); \n            int i;\n            i = s1.func(); \n            Single j; \n            j = s1.func(); \n        } \n    } \n}", "opta": "func() is a valid overloaded function.", "optb": "Overloading works only in case of subroutines and not in case of functions.", "optc": "func() cannot be considered overloaded because: return value cannot be used to distinguish between two overloaded functions.", "optd": "The call to i = s1.func() will assign 1 to i.", "opte": "The call j = s1.func() will assign 2.4 to j.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following ways to create an object of the Sample class given below will work correctly?\nclass Sample\n{\n    int i;\n    Single j;\n    double k;\n    public Sample (int ii, Single jj, double kk)\n    {\n        i = ii;\n        j = jj;\n        k = kk;\n    } \n}", "opta": "Sample s1 = new Sample();", "optb": "Sample s1 = new Sample(10);", "optc": "Sample s2 = new Sample(10, 1.2f);", "optd": "Sample s3 = new Sample(10, 1.2f, 2.4);", "opte": "Sample s1 = new Sample(, , 2.5);", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which  of the   following  statements  are   correct  about  static functions?\nStatic functions can access only static data.\nStatic functions cannot call instance functions.\nIt is necessary to initialize static data.\nInstance functions can call static functions and access static data.\nthis reference is passed to static functions.", "opta": "1, 2, 4", "optb": "2, 3, 5", "optc": "3, 4", "optd": "4, 5", "opte": "None of these", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about constructors?", "opta": "If we provide a one-argument constructor then the compiler still provides a zero-argument constructor.", "optb": "Static constructors can use optional arguments.", "optc": "Overloaded constructors cannot use optional arguments.", "optd": "If we do not provide a constructor, then the compiler provides a zero-argument constructor.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is the correct way to define the constructor(s) of the Sample class if we are to create objects as per the C#.NET code snippet given below?\nSample s1 = new Sample(); \nSample s2 = new Sample(9, 5.6f);", "opta": "public Sample()\n{\n    i = 0; \n    j = 0.0f;\n}\npublic Sample (int ii, Single jj)\n{\n    i = ii;\n    j = jj;\n}", "optb": "public Sample (Optional int ii = 0, Optional Single jj = 0.0f)\n{\n    i = ii;\n    j = jj;\n}", "optc": "public Sample (int ii, Single jj)\n{\n    i = ii;\n    j = jj;\n}", "optd": "Sample s;", "opte": "s = new Sample();", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "In which of the following should the methods of a class differ if they are to be treated as overloaded methods?\nType of arguments\nReturn type of methods\nNumber of arguments\nNames of methods\nOrder of arguments", "opta": "2, 4", "optb": "3, 5", "optc": "1, 3, 5", "optd": "3, 4, 5", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Can static procedures access instance data?", "opta": "Yes", "optb": "No", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about constructors in C#.NET?\nConstructors cannot be overloaded.\nConstructors always have the name same as the name of the class.\nConstructors are never called explicitly.\nConstructors never return any value.\nConstructors allocate space for the object in memory.", "opta": "1, 3, 5", "optb": "2, 3, 4", "optc": "3, 5", "optd": "4, 5", "opte": "None of these", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "How many times can a constructor be called during lifetime of the object?", "opta": "As many times as we call it.", "optb": "Only once.", "optc": "Depends upon a Project Setting made in Visual Studio.NET.", "optd": "Any number of times before the object gets garbage collected.", "opte": "Any number of times before the object is deleted.", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Is it possible to invoke Garbage Collector explicitly?", "opta": "Yes", "optb": "No", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about the C#.NET code snippet given below?\nclass Sample\n{\n    static int i;\n    int j;\n    public void proc1()\n    {\n        i = 11; \n        j = 22;\n    }\n    public static void proc2()\n    {\n        i = 1;\n        j = 2;\n    }\n    static Sample()\n    {\n        i = 0; \n        j = 0;\n    }\n}", "opta": "i cannot be initialized in proc1().", "optb": "proc1() can initialize i as well as j.", "optc": "j can be initialized in proc2().", "optd": "The constructor can never be declared as static.", "opte": "proc2() can initialize i as well as j.", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct?", "opta": "There   is  one  garbage  collector per program  running  in memory.", "optb": "There is one common garbage collector for all programs.", "optc": "An object is destroyed by the garbage collector when only one reference refers to it.", "optd": "We  have  to  specifically  run  the  garbage  collector after executing Visual Studio.NET.", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Is it possible for you to prevent an object from being created by using zero argument constructor?", "opta": "Yes", "optb": "No", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which  of the  following  statements  are  correct  about  static functions?", "opta": "Static functions are invoked using objects of a class.", "optb": "Static functions can access static data as well as instance data.", "optc": "Static functions are outside the class scope.", "optd": "Static functions are invoked using class.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "What will be the output of the C#.NET code snippet given below?\nnamespace IndiabixConsoleApplication\n{ \n    class Sample\n    { \n        static Sample()\n        { \n            Console.Write(\"Sample class \");\n        }\n        public static void Bix1()\n        { \n            Console.Write(\"Bix1 method \");\n        } \n    } \n    class MyProgram\n    { \n        static void Main(string[ ] args)\n        { \n            Sample.Bix1();\n        } \n    } \n}", "opta": "Sample class Bix1 method", "optb": "Bix1 method", "optc": "Sample class", "optd": "Bix1 method Sample class", "opte": "Sample class Sample class", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about constructors in C#.NET?", "opta": "A constructor cannot be declared as private.", "optb": "A constructor cannot be overloaded.", "optc": "A constructor can be a static constructor.", "optd": "A constructor cannot access static data.", "opte": "this reference is never passed to a constructor.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "What will be the output of the C#.NET code snippet given below?\nnamespace IndiabixConsoleApplication\n{\n    class Sample\n    { \n        public static void fun1()\n        { \n            Console.WriteLine(\"Bix1 method\");\n        }\n        public void fun2()\n        { \n            fun1(); \n            Console.WriteLine(\"Bix2 method\");\n        }\n        public void fun2(int i)\n        { \n            Console.WriteLine(i);\n            fun2(); \n        } \n    } \n    class MyProgram\n    { \n        static void Main(string[ ] args)\n        { \n            Sample s = new Sample(); \n            Sample.fun1(); \n            s.fun2(123);\n        } \n    } \n}", "opta": "Bix1 method \n123\nBixl method \nBix2 method", "optb": "Bix1 method \n123\nBix2 method", "optc": "Bix2 method \n123\nBix2 method \nBixl method", "optd": "Bixl method\n123", "opte": "Bix2 method \n123\nBixl method", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "What does the following C#.NET code snippet will print?\nint i = 0, j = 0; \n\nlabel:\n    i++;\n    j+=i;\nif (i < 10)\n{\n    Console.Write(i +\" \");\n    goto label; \n}", "opta": "Prints 1 to 9", "optb": "Prints 0 to 8", "optc": "Prints 2 to 8", "optd": "Prints 2 to 9", "opte": "Compile error at label:.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is the correct output for the C#.NET program given below?\nint i = 20 ;\nfor( ; ; )\n{\n    Console.Write(i + \" \"); \n    if (i >= -10)\n        i -= 4; \n    else \n        break;\n}", "opta": "20 16 12 84 0 -4 -8", "optb": "20 16 12 8 4 0", "optc": "20 16 12 8 4 0 -4 -8 -12", "optd": "16 12 8 4 0", "opte": "16 8 0 -8", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct?", "opta": "It is not possible to extend the if statement to handle multiple conditions using the else-if arrangement.", "optb": "The  switch  statement  can  include  any  number  of case instances with two case statements having the same value.", "optc": "A jump statement such as a break is required after each case block excluding the last block if it is a default statement.", "optd": "The if statement selects a statement for execution based on the value of a Boolean expression.", "opte": "C# always supports an implicit fall through from one case label to another.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "What is the output of the C#.NET code snippet given below?\n\nnamespace IndiabixConsoleApplication\n{\n    public enum color\n    { red, green, blue };\n    \n    class SampleProgram\n    {\n        static void Main (string[ ] args)\n        {\n            color c = color.blue;\n            switch (c)\n            {\n                case color.red:\n                    Console.WriteLine(color.red); \n                    break; \n                \n                case color.green: \n                    Console.WriteLine(color.green); \n                    break; \n                \n                case color.blue: \n                    Console.WriteLine(color.blue); \n                    break; \n            } \n        } \n    } \n}", "opta": "red", "optb": "blue", "optc": "0", "optd": "1", "opte": "2", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is the correct way to rewrite the following C#.NET code snippet given below?\nint i = 0; \ndo\n{\n    Console.WriteLine(i);\n    i+ = 1; \n} while (i <= 10);", "opta": "int i = 0; \ndo\n{\n    Console.WriteLine(i);\n} until (i <= 10);", "optb": "int i;\nfor (i = 0; i <= 10 ; i++)\n    Console.WriteLine(i);", "optc": "int i = 0; \nwhile (i <= 11)\n{\n    Console.WriteLine(i);\n    i += 1; \n}", "optd": "int i = 0;\ndo while ( i <= 10)\n{\n    Console.WriteLine(i); \n    i += 1;\n}", "opte": "int i = 0;\ndo until (i <= 10)\n{\n    Console.WriteLine(i);\n    i+=1; \n}", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "What will be the output of the C#.NET code snippet given below?\nint val;\nfor (val = -5; val <= 5; val++)\n{\n    switch (val)\n    {\n        case 0:\n            Console.Write (\"India\"); \n            break;\n    }\n    \n    if (val > 0)\n        Console.Write (\"B\"); \n    else if (val < 0)\n        Console.Write (\"X\");\n}", "opta": "XXXXXIndia", "optb": "IndiaBBBBB", "optc": "XXXXXIndiaBBBBB", "optd": "BBBBBIndiaXXXXX", "opte": "Zero", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "What will be the output of the C#.NET code snippet given below?\nchar ch = Convert.ToChar ('a' | 'b' | 'c'); \nswitch (ch)\n{\n    case 'A': \n    case 'a':\n    Console.WriteLine (\"case A | case a\");\n    break;\n    \n    case 'B': \n    case 'b':\n    Console.WriteLine (\"case B | case b\");\n    break;\n    \n    case 'C':\n    case 'c':\n    case 'D':\n    case 'd':\n    Console.WriteLine (\"case D | case d\");\n    break;\n}", "opta": "case A | case a", "optb": "case B | case b", "optc": "case D | case d", "optd": "Compile Error", "opte": "No output", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is the incorrect form of Decision Control instruction?", "opta": "if (Condition1) \n{// Some statement}", "optb": "if (Condition1) {// Some statement} \nelse {// Some statement}", "optc": "if (Condition1) {// Some statement} \nelse {// Some statement} \nelse if ( Condition2){//Some statement}", "optd": "if ( Condition1 ) {// Some statement} \nelse if ( Condition2 ) {// Some statement} \nelse {// Some statement}", "opte": "if ( Condition1 ) {// Some statement} \nelse if ( Condition2 ) {// Some statement} \nelse if ( Condition3 ) {// Some statement} \nelse {// Some statement}", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following code snippets are the correct way to determine whether a is Odd or Even?\nint a;\nString res; \nif (a % 2 == 0)\n    res = \"Even\"; \nelse \n    res = \"Odd\";\nint a; \nString res; \nif (a Mod 2 == 0) \n    res = \"Even\"; \nelse\n    res = \"Odd\";\nint a;\nConsole.WriteLine(a Mod 2 == 0 ? \"Even\": \"Odd\");\nint a; \nString res;\na % 2 == 0 ? res = \"Even\" : res = \"Odd\";\nConsole.WriteLine(res);", "opta": "1, 3", "optb": "1 Only", "optc": "2, 3", "optd": "4 Only", "opte": "None of these", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following can be used to terminate a while loop and transfer control outside the loop?\nexit while\ncontinue\nexit statement\nbreak\ngoto", "opta": "1, 3", "optb": "2, 4", "optc": "3, 5", "optd": "4, 5", "opte": "None of these", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "The C#.NET code snippet given below generates ____ numbers series as output?\nint i = 1, j = 1, val;\nwhile (i < 25)\n{\n    Console.Write(j + \" \");\n    val = i + j;\n    j = i;\n    i = val;\n}", "opta": "Prime", "optb": "Fibonacci", "optc": "Palindrome", "optd": "Odd", "opte": "Even", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about the C#.NET code snippet given below?\nif (age > 18 && no < 11)\n    a = 25;\nThe condition no < 11 will be evaluated only if age > 18 evaluates to True.\nThe statement a = 25 will get executed if any one condition is True.\nThe condition no < 11 will be evaluated only if age > 18 evaluates to False.\nThe statement a = 25 will get executed if both the conditions are True.\n&& is known as a short circuiting logical operator.", "opta": "1, 3", "optb": "2, 5", "optc": "1, 4, 5", "optd": "3, 4, 5", "opte": "None of these", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct?\nA switch statement can act on numerical as well as Boolean types.\nA  switch  statement  can  act  on  characters,   strings  and enumerations types.\nWe cannot declare variables within a case statement if it is not enclosed by { }.\nThe foreach statement is used to iterate through the collection to get the desired information and should be used to change the contents of the collection to avoid unpredictable side effects.\nAll of the expressions of the for statement are not optional.", "opta": "1, 2", "optb": "2, 3", "optc": "3, 5", "optd": "4, 5", "opte": "None of these", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "What will be the output of the C#.NET code snippet given below?\nint i = 2, j = i;\nif (Convert.ToBoolean((i | j & 5) & (j - 25 * 1)))\n    Console.WriteLine(1); \nelse\n    Console.WriteLine(0);", "opta": "0", "optb": "1", "optc": "Compile Error", "optd": "Run time Error", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about the C#.NET code snippet given below?\nswitch (id)\n{\n    case 6: \n        grp = \"Grp B\"; \n        break;\n    \n    case 13:\n        grp = \"Grp D\";\n        break;\n    \n    case 1:\n        grp = \"Grp A\";\n        break;\n    \n    case ls > 20:\n        grp = \"Grp E\";\n        break ;\n    \n    case Else:\n        grp = \"Grp F\";\n        break;\n}", "opta": "Compiler will report an error in case ls > 20 as well as in case Else.", "optb": "There is no error in this switch case statement.", "optc": "Compiler will report an error only in case Else.", "optd": "Compiler will report an error as there is no default case.", "opte": "The order of the first three cases should be case 1, case 6, case 13 (ascending).", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is another way to rewrite the code snippet given below?\nint a = 1, b = 2, c = 0;\nif (a < b) c = a;", "opta": "int a = 1, b = 2, c = 0;\nc = a < b ? a : 0;", "optb": "int a = 1, b = 2, c = 0;\na < b ? c = a : c = 0;", "optc": "int a = 1, b = 2, c = 0;\na < b ? c = a : c = 0 ? 0 : 0;", "optd": "int a = 1, b = 2, c = 0;\na < b ? return (c): return (0);", "opte": "int a = 1, b = 2,c = 0;\nc = a < b : a ? 0;", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct?\nThe switch statement is a control statement that handles multiple selections and enumerations by passing control to one of the case statements within its body.\nThe goto statement passes control to the next iteration of the enclosing iteration statement in which it appears.\nBranching is performed using jump statements which cause an immediate transfer of the program control.\nA common use of continue is to transfer control to a specific switch-case label or the default label in a switch statement.\nThe do statement executes a statement or a block of statements enclosed in {} repeatedly until a specified expression evaluates to false.", "opta": "1, 2, 4", "optb": "1, 3, 5", "optc": "2, 3, 4", "optd": "3, 4, 5", "opte": "None of these", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about the C#.NET code snippet given below?\nif (age > 18 || no < 11)\n    a = 25;\nThe condition no < 11 will get evaluated only if age > 18 evaluates to False.\nThe condition no < 11 will get evaluated if age > 18 evaluates to True.\nThe statement a = 25 will get evaluated if any one one of the two conditions is True.\n|| is known as a short circuiting logical operator.\nThe statement a = 25 will get evaluated only if both the conditions are True.", "opta": "1, 4, 5", "optb": "2, 4", "optc": "1, 3, 4", "optd": "2, 3, 5", "opte": "None of these", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "What will be the output of the code snippet given below?\nint i;\nfor(i = 0; i<=10; i++)\n{\n    if(i == 4)\n    {\n        Console.Write(i + \" \"); continue;\n    }\n    else if (i != 4)\n        Console.Write(i + \" \"); else\n    break;\n}", "opta": "1 2 3 4 5 6 7 8 9 10", "optb": "1 2 3 4", "optc": "0 1 2 3 4 5 6 7 8 9 10", "optd": "4 5 6 7 8 9 10", "opte": "4", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following loop correctly prints the elements of the array?\nchar[ ] arr = new char[ ] {'k', 'i','C', 'i','t'} ;", "opta": "do\n{\n    Console.WriteLine((char) i); \n} \nwhile (int i = 0; i < arr; i++);", "optb": "foreach (int i in arr)\n{\n    Console.WriteLine((char) i);\n}", "optc": "for (int i = 0; i < arr; i++)\n{\n    Console.WriteLine((char) i);\n}", "optd": "while (int i = 0; i < arr; i++)\n{\n    Console.WriteLine((char) i);\n}", "opte": "do\n{\n    Console.WriteLine((char) i); \n} \nuntil (int i = 0; i < arr; i++);", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about the C#.NET code snippet given below?\nint i, j, id = 0; switch (id)\n{ \n    case i:\n        Console.WriteLine(\"I am in Case i\");\n        break; \n    \n    case j:\n        Console.WriteLine(\"I am in Case j\");\n        break;\n}", "opta": "The compiler will report case i and case j as errors since variables cannot be used in cases.", "optb": "Compiler will report an error since there is no default case in the switch case statement.", "optc": "The code snippet prints the result as \"I am in Case i\"\".", "optd": "The code snippet prints the result as \"I am in Case j\".", "opte": "There is no error in the code snippet.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about data types?\nIf the integer literal exceeds the range of byte, a compilation error will occur.\nWe cannot implicitly convert non-literal numeric types of larger storage size to byte.\nByte cannot be implicitly converted to float.\nA char can be implicitly converted to only int data type.\nWe can cast the integral character codes.", "opta": "1, 3, 5", "optb": "2, 4", "optc": "3, 5", "optd": "1, 2, 5", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is an 8-byte Integer?", "opta": "Char", "optb": "Long", "optc": "Short", "optd": "Byte", "opte": "Integer", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is NOT an Integer?", "opta": "Char", "optb": "Byte", "optc": "Integer", "optd": "Short", "opte": "Long", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct?", "opta": "Information is never lost during narrowing conversions.", "optb": "The CInteger() function can be used to convert a Single to an Integer.", "optc": "Widening conversions take place automatically.", "optd": "Assigning an Integer to an Object type is known as Unboxing.", "opte": "3.14 can be treated as Decimal by using it in the form 3.14F.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following are value types?\nInteger\nArray\nSingle\nString\nLong", "opta": "1, 2, 5", "optb": "1, 3, 5", "optc": "2, 4", "optd": "3, 5", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following does not store a sign?", "opta": "Short", "optb": "Integer", "optc": "Long", "optd": "Byte", "opte": "Single", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "What is the size of a Decimal?", "opta": "4 byte", "optb": "8 byte", "optc": "16 byte", "optd": "32 byte", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "What will be the output of the following code snippet when it is executed?\n    int x = 1; \n    float y = 1.1f;\n    short z = 1;\n    Console.WriteLine((float) x + y * z - (x += (short) y));", "opta": "0.1", "optb": "1.0", "optc": "1.1", "optd": "11", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about the C#.NET code snippet given below?\nshort s1 = 20;\nshort s2 = 400;\nint a;\na = s1 * s2;", "opta": "A value 8000 will be assigned to a.", "optb": "A negative value will be assigned to a.", "optc": "During arithmetic if the result exceeds the high or low value of the range the value wraps around till the other side of the range.", "optd": "An error is reported as widening conversion cannot takes place.", "opte": "An overflow error will be reported since the result of the multiplication exceeds the range of a Short Integer.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is the correct size of a Decimal datatype?", "opta": "8 Bytes", "optb": "4 Bytes", "optc": "10 Bytes", "optd": "16 Bytes", "opte": "None of the above.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct?\nWe can assign values of any type to variables of type object.\nWhen a variable of a value type is converted to object, it is said to be unboxed.\nWhen a variable of type object is converted to a value type, it is said to be boxed.\nBoolean variable cannot have a value of null.\nWhen a value type is boxed, an entirely new object must be allocated and constructed.", "opta": "2, 5", "optb": "1, 5", "optc": "3, 4", "optd": "2, 3", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is the correct ways to set a value 3.14 in a variable pi such that it cannot be modified?", "opta": "float pi = 3.14F;", "optb": "#define pi 3.14F;", "optc": "const float pi = 3.14F;", "optd": "const float pi; pi = 3.14F;", "opte": "pi = 3.14F;", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about data types?\nEach value type has an  implicit default constructor that initializes the default value of that type.\nIt is possible for a value type to contain the null value.\nAll value types are derived implicitly from System.ValueType class.\nIt is not essential that local variables in C# must be initialized before being used.\nVariables of reference types referred to as objects and store references to the actual data.", "opta": "1, 3, 5", "optb": "2, 4", "optc": "3, 5", "optd": "2, 3, 4", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following are the correct way to initialise the variables i and j to a value 10 each?\nint i = 10; int j = 10;\nint i, j;\ni = 10 : j = 10;\nint i = 10, j = 10;\nint i, j = 10;\nint i = j = 10;", "opta": "2, 4", "optb": "1, 3", "optc": "3, 5", "optd": "4, 5", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement correctly assigns a value 33 to a variable c?\nbyte a = 11, b = 22, c;", "opta": "c = (byte) (a + b);", "optb": "c = (byte) a + (byte) b;", "optc": "c = (int) a + (int) b;", "optd": "c = (int)(a + b);", "opte": "c = a + b;", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about datatypes in C#.NET?\nEvery datatype is either a value type or a reference type.\nValue types are always created on the heap.\nReference types are always created on the stack.\nMapping of every value type to a type in Common Type System facilitates Interoperability in C#.NET.\nEvery reference type gets mapped to a type in Common Type System.", "opta": "1, 3", "optb": "2, 5", "optc": "1, 4", "optd": "3, 4", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is the correct default value of a Boolean type?", "opta": "0", "optb": "1", "optc": "True", "optd": "False", "opte": "-1", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which  of the  following  statements  is incorrect  about delegate?", "opta": "Delegates are reference types.", "optb": "Delegates are object oriented.", "optc": "Delegates are type-safe.", "optd": "Delegates serve the same purpose as function pointers in C and pointers to member function operators in C++.", "opte": "Only one method can be called using a delegate.", "ans": "E", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "In which of the following areas are delegates commonly used?\nRemoting\nSerialization\nFile Input/Output\nMultithreading\nEvent handling", "opta": "1 and 2 only", "optb": "1 and 5 only", "optc": "1, 2 and 3 only", "optd": "4 and 5 only", "opte": "All of the above", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which   of   the   following   is   the   necessary   condition   for implementing delegates?", "opta": "Class declaration", "optb": "Inheritance", "optc": "Run-time Polymorphism", "optd": "Exceptions", "opte": "Compile-time Polymorphism", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about the delegate declaration given below?\n    delegate void del(int i);\nOn declaring the delegate a class called del will get created.\nThe signature of del need not be same as the signature of the method that we intend to call using it.\nThe del class will be derived from the MulticastDelegate class.\nThe method that can be called using del should not be a static method.\nThe del class will contain a one-argument constructor and an lnvoke() method.", "opta": "1, 2 and 3 only", "optb": "1, 3 and 5 only", "optc": "2 and 4 only", "optd": "4 only", "opte": "All of the above", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is the correct way to call the function MyFun() of the Sample class given below?\nclass Sample\n{\n    public int MyFun(int i)\n    {\n        Console.WriteLine(\"Welcome to IndiaBIX.com !\" );\n        return 0;\n    }\n}", "opta": "delegate void del(int i);\nSample s = new Sample();\ndeld = new del(ref s.MyFun);\nd(10);", "optb": "delegate int del(int i);\nSample s = new Sample(.);\ndel = new delegate(ref MyFun);\ndel(10);", "optc": "Sample s = new Sample();\ndelegate void del = new delegate(ref MyFun);\ndel(10);", "optd": "delegate int del(int i);\ndel d;\nSample s = new Sample();\nd = new del(ref s.MyFun);\nd(10);", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is the correct way to call subroutine MyFun() of the Sample class given below?\nclass Sample\n{\n    public void MyFun(int i, Single j)\n    {\n        Console.WriteLine(\"Welcome to IndiaBIX !\");\n    }\n}", "opta": "delegate void del(int i);\nSample s = new Sample();\ndel d = new del(ref s.MyFun);\nd(10, 1.1f);", "optb": "delegate void del(int i, Single j);\ndel d;\nSample s = new Sample();\nd = new del(ref s.MyFun);\nd(10, 1.1f);", "optc": "Sample s = new Sample();\ndelegate void d = new del(ref MyFun);\nd(10, 1.1f);", "optd": "delegate void del(int i, Single]);\nSample s = new Sample();\ndel = new delegate(ref MyFun);\ndel(10, 1.1f);", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about a delegate? \nInheritance is a prerequisite for using delegates.\nDelegates are type-safe.\nDelegates provide wrappers for function pointers.\nThe declaration of a delegate must match the signature of the method that we intend to call using it.\nFunctions called using delegates are always late-bound.", "opta": "1 and 2 only", "optb": "1, 2 and 3 only", "optc": "2, 3 and 4 only", "optd": "All of the above", "opte": "None of the above", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about delegates?\nDelegates are not type-safe.\nDelegate is a user-defined type.\nOnly one method can be bound with one delegate object.  \nDelegates can be used to implement callback notification.\nDelegates permit execution of a method on a secondary thread in an asynchronous manner.", "opta": "1 and 2 only", "optb": "1, 2 and 3 only", "optc": "2, 4 and 5 only", "optd": "4 and 5 only", "opte": "All of the above", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about delegates?", "opta": "Delegates cannot be used to call a static method of a class.", "optb": "Delegates cannot be used to call procedures that receive variable number of arguments.", "optc": "If signatures of two methods are same they can be called through the same delegate object.", "optd": "Delegates cannot be used to call an instance function. Delegates cannot be used to call an instance subroutine.", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following are the correct ways to declare a delegate for calling the function func() defined in the sample class given below?\nclass Sample\n{\n    public int func(int i, Single j)\n    {\n        /* Add code here. */\n    }\n}", "opta": "delegate d(int i, Single j);", "optb": "delegate void d(int, Single);", "optc": "delegate int d(int i, Single j);", "optd": "delegate void (int i, Single j);", "opte": "delegate int sample.func(int i, Single j);", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Suppose on pushing a button an object is to be notified, but it is not known until runtime which object should be notified. Which of the following programming constructs should be used to implement this idea?", "opta": "Attribute", "optb": "Delegate", "optc": "Namespace", "optd": "Interface", "opte": "Encapsulation", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is incorrect about a delegate?", "opta": "A single delegate can invoke more than one method.", "optb": "Delegates can be shared.", "optc": "Delegate is a value type.", "optd": "Delegates are type-safe wrappers for function pointers.", "opte": "The signature of a delegate must match the signature of the method that is to be called using it.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Suppose a Generic class called SortObjects is to be made capable of sorting objects of any type (Integer, Single, Byte etc.). Which of the following programming constructs should be used to implement the comparision function?", "opta": "Namespace", "optb": "Interface", "optc": "Encapsulation", "optd": "Delegate", "opte": "Attribute", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "With which of the following can the ref keyword be used? \nStatic data\nInstance data\nStatic function/subroutine\nInstance function/subroutine", "opta": "1, 2", "optb": "3, 4", "optc": "1, 3", "optd": "2, 4", "opte": "All of the above", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are TRUE about the .NET CLR?\nIt   provides   a   language-neutral   development   &   execution environment.\nIt ensures that an application would not be able to access memory that it is not authorized to access.\nIt provides services to run \"managed\" applications.\nThe resources are garbage collected.\nIt provides services to run \"unmanaged\" applications.", "opta": "Only 1 and 2", "optb": "Only 1, 2 and 4", "optc": "1, 2, 3, 4", "optd": "Only 4 and 5", "opte": "Only 3 and 4", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following are valid .NET CLR JIT performance counters?\nTotal memory used for JIT compilation\nAverage memory used for JIT compilation\nNumber of methods that failed to compile with the standard JIT\nPercentage    of   processor    time    spent    performing    JIT compilation\nPercentage of memory currently dedicated for JIT compilation", "opta": "1, 5", "optb": "3, 4", "optc": "1, 2", "optd": "4, 5", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about Managed Code?", "opta": "Managed code is the code that  is compiled by the JIT compilers.", "optb": "Managed code is the code  where  resources are  Garbage Collected.", "optc": "Managed code is the code that runs on top of Windows.", "optd": "Managed code is the code that is written to target the services of the CLR.", "opte": "Managed code is the code that can run on top of Linux.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following utilities can be used to compile managed assemblies into processor-specific native code?", "opta": "gacutil", "optb": "ngen", "optc": "sn", "optd": "dumpbin", "opte": "ildasm", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following are NOT true about .NET Framework?\nIt provides a consistent object-oriented programming environment whether object code is stored and executed locally, executed locally but Internet-distributed, or executed remotely.\nIt provides a code-execution environment that minimizes software deployment and versioning conflicts.\nIt provides a code-execution environment that promotes safe execution of code, including code created by an unknown or semi-trusted third party.\nIt provides different programming models for Windows-based applications and Web-based applications.\nIt provides an event driven programming model for building Windows Device Drivers.", "opta": "1, 2", "optb": "2, 4", "optc": "4, 5", "optd": "1, 2, 4", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following components of the .NET framework provide an extensible set of classes that can be used by any .NET compliant programming language?", "opta": ".NET class libraries", "optb": "Common Language Runtime", "optc": "Common Language Infrastructure", "optd": "Component Object Model", "opte": "Common Type System", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following jobs are NOT performed by Garbage Collector?\nFreeing memory on the stack.\nAvoiding memory leaks.\nFreeing memory occupied by unreferenced objects.\nClosing unclosed database collections.\nClosing unclosed files.", "opta": "1, 2, 3", "optb": "3, 5", "optc": "1, 4, 5", "optd": "3, 4", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following .NET components can be used to remove unused references from the managed heap?", "opta": "Common Language Infrastructure", "optb": "CLR", "optc": "Garbage Collector", "optd": "Class Loader", "opte": "CTS", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which   of  the   following   statements   correctly   define   .NET Framework?", "opta": "It is an environment for developing, building, deploying and executing Desktop Applications, Web Applications and Web Services.", "optb": "It is an environment for developing, building, deploying and executing only Web Applications.", "optc": "It is an environment for developing, building, deploying and executing Distributed Applications.", "optd": "It is an environment for developing, building, deploying and executing Web Services.", "opte": "It is an environment for development and execution of Windows applications.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following constitutes the .NET Framework?\nASP.NET Applications\nCLR\nFramework Class Library\nWinForm Applications\nWindows Services", "opta": "1, 2", "optb": "2, 3", "optc": "3, 4", "optd": "2, 5", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following assemblies can be stored in Global Assembly Cache?", "opta": "Private Assemblies", "optb": "Friend Assemblies", "optc": "Shared Assemblies", "optd": "Public Assemblies", "opte": "Protected Assemblies", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Code that targets the Common Language Runtime is known as", "opta": "Unmanaged", "optb": "Distributed", "optc": "Legacy", "optd": "Managed Code", "opte": "Native Code", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about the .NET Framework?", "opta": ".NET   Framework   uses   DCOM   for   achieving   language interoperability.", "optb": ".NET Framework is built on the DCOM technology.", "optc": ".NET Framework uses DCOM for making transition between managed and unmanaged code.", "optd": ".NET   Framework   uses   DCOM   for   creating   unmanaged applications.", "opte": ".NET   Framework   uses   COM+   services   while   creating Distributed Applications.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is the root of the .NET type hierarchy?", "opta": "System.Object", "optb": "System.Type", "optc": "System.Base", "optd": "System.Parent", "opte": "System.Root", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following benefits do we get on running managed code under CLR?\nType safety of the code running under CLR is assured.\nIt is ensured that an application would not access the memory that it is not authorized to access.\nIt launches separate process for every application running under it.\nThe resources are Garbage collected.", "opta": "Only 1 and 2", "optb": "Only 2, 3 and 4", "optc": "Only 1, 2 and 4", "optd": "Only 4", "opte": "All of the above", "ans": "E", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following security features can .NET applications avail?\nPIN Security\nCode Access Security\nRole Based Security\nAuthentication Security\nBiorhythm Security", "opta": "1, 4, 5", "optb": "2, 5", "optc": "2, 3", "optd": "3, 4", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following jobs are done by Common Language Runtime?\nIt provides core services such as memory management, thread management, and remoting.\nIt enforces strict type safety.\nIt provides Code Access Security.\nIt provides Garbage Collection Services.", "opta": "Only 1 and 2", "optb": "Only 3, 4", "optc": "Only 1, 3 and 4", "optd": "Only 2, 3 and 4", "opte": "All of the above", "ans": "E", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about a .NET Assembly?\nIt is the smallest deployable unit.\nEach assembly has only one entry point - Main(), WinMain() or DLLMain().\nAn assembly can be a Shared assembly or a Private assembly.\nAn assembly can contain only code and data.\nAn assembly is always in the form of an EXE file.", "opta": "1, 2, 3", "optb": "2, 4, 5", "optc": "1, 3, 5", "optd": "1, 2", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about JIT?\nJIT compiler compiles instructions into machine code at run time.\nThe code compiler by the JIT compiler runs under CLR.\nThe instructions compiled by JIT compilers are written in native code.\nThe instructions compiled by JIT compilers are written in Intermediate Language (IL) code.\nThe method is JIT compiled even if it is not called", "opta": "1, 2, 3", "optb": "2, 4", "optc": "3, 4, 5", "optd": "1, 2", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following are parts of the .NET Framework? \nThe Common Language Runtime (CLR) \nThe Framework Class Libraries (FCL) \nMicrosoft Published Web Services \nApplications deployed on IIS \nMobile Applications", "opta": "Only 1, 2, 3", "optb": "Only 1, 2", "optc": "Only 1, 2, 4", "optd": "Only 4, 5", "opte": "All of the above", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about an enum used inC#.NET?\nBy default the first enumerator has the value equal to the number of elements present in the list.\nThe value of each successive enumerator is decreased by 1.\nAn enumerator contains white space in its name.\nA variable cannot be assigned to an enum element.\nValues of enum elements cannot be populated from a database.", "opta": "1, 2", "optb": "3, 4", "optc": "4, 5", "optd": "1, 4", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about the C#.NET code snippet given below?\nint a = 10; \nint b = 20; \nint c = 30;\nenum color: byte\n{\n    red = a, \n    green = b,\n    blue = c \n}", "opta": "Variables cannot be assigned to enum elements.", "optb": "Variables can be assigned to any one of the enum elements.", "optc": "Variables can be assigned only to the first enum element.", "optd": "Values assigned to enum elements must always be successive values.", "opte": "Values assigned to enum elements must always begin with 0.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is true about an enum used in C#.NET?", "opta": "An implicit cast is needed to convert from enum type to an integral type.", "optb": "An enum variable cannot have a public access modifier.", "optc": "An enum variable cannot have a private access modifier.", "optd": "An enum variable can be defined inside a class or a namespace.", "opte": "An enum variable cannot have a protected access modifier.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is the correct output for the C#.NET code snippet given below?\nenum color\n{\n    red,\n    green,\n    blue \n}\ncolor c; \nc = color.red; \nConsole.WriteLine(c);", "opta": "1", "optb": "-1", "optc": "red", "optd": "0", "opte": "color.red", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about an enum used inC#.NET?\nTo use the keyword enum, we should either use [enum] or System.Enum.\nenum is a keyword.\nEnum is class declared in System.Type namespace.\nEnum is a class declared in the current project's root namespace.\nEnum is a class declared in System namespace.", "opta": "1, 3", "optb": "2, 4", "optc": "2, 5", "optd": "3, 4", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following will be the correct output for the C#.NET code snippet given below?\nenum color : int\n{\n    red = -3,\n    green,\n    blue \n}\nConsole.Write( (int) color.red + \", \"); \nConsole.Write( (int) color.green + \", \"); \nConsole.Write( (int) color.blue );", "opta": "-3, -2, -1", "optb": "-3, 0, 1", "optc": "0, 1, 2", "optd": "red, green, blue", "opte": "color.red, color.green, color.blue", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "An enum that is declared inside a class, struct, namespace or interface is treated as public.", "opta": "True", "optb": "False", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about the C#.NET code snippet given below?\nenum per\n{\n    married, \n    unmarried, \n    divorced, \n    spinster\n}\nper.married = 10; \nConsole.WriteLine(per.unmarried);", "opta": "The program will output a value 11.", "optb": "The program will output a value 1.", "optc": "The program will output a value 2.", "optd": "The program will report an error since an enum element cannot be assigned a value outside the enum declaration.", "opte": "The enum elements must be declared private.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is the correct output for the C#.NET code snippet given below?\nenum color: int\n{ \n    red,\n    green, \n    blue = 5, \n    cyan,\n    magenta = 10, \n    yellow \n}\nConsole.Write( (int) color.green + \", \" ); \nConsole.Write( (int) color.yellow );", "opta": "2, 11", "optb": "1, 11", "optc": "2, 6", "optd": "1, 5", "opte": "None of the above", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "An enum can be declared inside a class, struct, namespace or interface.", "opta": "True", "optb": "False", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following CANNOT be used as an underlying datatype for an enum in C#.NET?", "opta": "byte", "optb": "short", "optc": "float", "optd": "int", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about enum used in C#.NET?\nEvery enum is derived from an Object class.\nEvery enum is a value type.\nThere does not exist a way to print an element of an enum as a string.\nEvery enum is a reference type.\nThe default underlying datatype of an enum is int.", "opta": "1, 2, 5", "optb": "1, 4", "optc": "3, 5", "optd": "2, 3, 4", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about the C#.NET code snippet given below?\nenum color : byte\n{\n    red = 500,\n    green = 1000,\n    blue = 1500\n}", "opta": "byte values cannot be assigned to enum elements.", "optb": "enum elements should always take successive values.", "optc": "Since 500, 1000, 1500 exceed the valid range of byte compiler will report an error.", "optd": "enum must always be of int type.", "opte": "enum elements should be declared as private.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is the correct output for the C#.NET code snippet given below?\nenum color\n{\n    red,\n    green,\n    blue \n}\ncolor c = color.red;\nType t;\nt = c.GetType();\nstring[ ]str;\nstr = Enum.GetNames(t);\nConsole.WriteLine(str[ 0 ]);", "opta": "red", "optb": "0", "optc": "1", "optd": "-1", "opte": "color.red", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about the C#.NET code snippet given below?\nnamespace IndiabixConsoleApplication\n( \nclass Sample\n{ \n    private enum color : int\n    { \n        red, \n        green, \n        blue\n    }\n    public void fun()\n    {\n        Console.WriteLine(color.red); \n    }\n}\nclass Program\n{ \n    static void Main(string[ ] args)\n    { \n        // Use enum color here\n    } \n} \n}\nTo define a variable of type enum color in Main(), we should use the statement, color c; .\nenum color being private it cannot be used in Main().\nWe must declare enum color as public to be able to use it outside the class Sample.\nTo define a variable of type enum color in Main(), we should use the statement, Sample.color c; .\nWe must declare private enum color outside the class to be able to use it in Main().", "opta": "1, 2, 3", "optb": "2, 3, 4", "optc": "3, 4", "optd": "4, 5", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about an enum used in C#.NET?", "opta": "enum is a reference type.", "optb": "enum is a value type.", "optc": "Whether it a value type or a reference type depends upon size.", "optd": "Whether it a value type or a reference type depends upon a Project Setting made in Visual Stiiclio.NET.", "opte": "We can programmatically control whether it is a value type or a reference type.", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about an enum used in C#.NET?\nAn enum can be declared inside a class.\nAn enum can take Single, Double or Decimal values.\nAn enum can be declared outside a class.\nAn enum can be declared inside/outside a namespace.\nAn object can be assigned to an enum variable.", "opta": "1, 3, 4", "optb": "2, 5", "optc": "3, 4", "optd": "2, 4, 5", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is NOT a .NET Exception class?", "opta": "Exception", "optb": "StackMemoryException", "optc": "DivideByZeroException", "optd": "OutOfMemoryException", "opte": "InvalidOperationException", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about an Exception?", "opta": "It occurs during compilation.", "optb": "It occurs during linking.", "optc": "It occurs at run-time.", "optd": "It occurs during Just-In-Time compilation.", "opte": "It occurs during loading of the program.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "In C#.NET if we do not catch the exception thrown at runtime then which of the following will catch it?", "opta": "Compiler", "optb": "CLR", "optc": "Linker", "optd": "Loader", "opte": "Operating system", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about the C#.NET program given below?\nusing System;\nnamespace IndiabixConsoleApplication\n{\n    class MyProgram\n    {\n        static void Main(string[] args)\n        {\n            int index = 6;\n            int val = 44;\n            int[] a = new int[5];\n            try\n            {\n                a[index] = val ;\n            }    \n            catch(IndexOutOfRangeException e)\n            {\n                Console.Write(\"Index out of bounds \");\n            }\n            Console.Write(\"Remaining program\");\n        }\n    }\n}", "opta": "Value 44 will get assigned to a[6].", "optb": "It will output: Index out of bounds", "optc": "It will output: Remaining program", "optd": "It will not produce any output.", "opte": "It will output: Index out of bounds Remaining program", "ans": "E", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about exception handling in C#.NET?\nIf an exception occurs then the program terminates abruptly without getting any chance to recover from the exception.\nNo matter whether an exception occurs or not, the statements in the finally clause (if present) will get executed.\nA program can contain multiple finally clauses.\nA finally clause is written outside the try block.\nfinally clause is used to perform clean up operations like closing the network/database connections.", "opta": "1 only", "optb": "2 only", "optc": "2 and 5 only", "optd": "3 and 4 only", "opte": "None of the above", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about exception handling in C#.NET?\nIf our program does not catch an exception then the .NET CLR catches it.\nIt is possible to create user-defined exceptions.\nAll types of exceptions can be caught using the Exception class.\nCLRExceptions is the base class for all exception classes.\nFor every try block there must be a corresponding finally block.", "opta": "1 and 2 only", "optb": "1, 2 and 3 only", "optc": "4 and 5 only", "optd": "All of the above", "opte": "None of the above", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about the exception reported below?\nUnhandled Exception: System.lndexOutOfRangeException:\nIndex was outside the bounds of the array:\nat IndiabixConsoleApplication.MyProgram.SetVal(Int32 index, Int32 val) in\nD:\\Sample\\IndiabixConsoleApplication\\MyProgram.cs:line 26\nat IndiabixConsoleApplication.MyProgram.Main(String[] args) in\nD:\\Sample\\IndiabixConsoleApplication\\MyProgram.cs:line 20\nThe CLR failed to handle the exception. \nThe class MyProgram belongs to the namespace MyProgram.\nThe function SetVal() was called from Main() in line number 20.\nThe exception occurred in line number 26 in the function SetVal()\nThe runtime exception occurred in the project IndiabixConsoleApplication.", "opta": "1 only", "optb": "1 and 2 only", "optc": "3, 4 and 5 only", "optd": "All of the above", "opte": "None of the above", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is the Object Oriented way of handling run-time errors?", "opta": "OnError", "optb": "HERESULT", "optc": "Exceptions", "optd": "Error codes", "opte": "Setjump and Longjump", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about the C#.NET program given below if a value \"6\" is input to it?\nusing System;\nnamespace IndiabixConsoleApplication\n{\n    class MyProgram\n    {\n        static void Main(string[] args)\n        {\n            int index; \n            int val = 44;\n            int[] a = new int[5];\n            try\n            {\n                Console.Write(\"Enter a number:\");\n                index = Convert.Tolnt32(Console.ReadLine());\n                a[index] = val;\n            }\n            catch(FormatException e)\n            {\n                Console.Write(\"Bad Format\");\n            }\n            catch(IndexOutOfRangeException e)\n            {\n                Console.Write(\"Index out of bounds\");\n            }\n            Console.Write(\"Remaining program\");\n        }\n    }\n}", "opta": "It will output: Index out of bounds Remaining program", "optb": "It will output: Bad Format Remaining program", "optc": "It will output: Bad Format", "optd": "It will output: Remaining program", "opte": "It will output: Index out of bounds", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about the exception reported below?\nUnhandled Exception: System.lndexOutOfRangeException:\nIndex was outside the bounds of the array.\nat IndiabixConsoleApplication.Program.Main(String[] args) in \nD:\\ConsoleApplication\\Program.cs:line 14\nThe program did not handle an exception called IndexOutOfRangeException.\nThe program execution continued after the exception occurred.\nThe exception occurred in line number 14.\nIn line number 14, the program attempted to access an array element which was beyond the bounds of the array.\nThe CLR could not handle the exception.", "opta": "1 only", "optb": "1, 2 and 3 only", "optc": "2 and 5 only", "optd": "1, 3 and 4 only", "opte": "None of the above", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about exception handling in C#.NET?\ntry blocks cannot be nested.\nIn one function, there can be only one try block.\nAn exception must be caught in the same function in which it is thrown.\nAll values set up in the exception object are available in the catch block.\nWhile throwing a user-defined exception multiple values can be set in the exception, object.", "opta": "1 only", "optb": "1 and 2 only", "optc": "3 only", "optd": "4 and 5 only", "opte": "All of the above", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Exceptions can be thrown even from a constructor, whereas error codes cannot be returned from a constructor.", "opta": "True", "optb": "False", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about the C#.NET program given below if a value \"6\" is input to it?\nusing System;\nnamespace IndiabixConsoleApplication\n{\n    class MyProgram\n    {\n        static void Main (string[] args)\n        {\n            int index; \n            int val = 66; \n            int[] a = new int[5]; \n            try\n            {\n                Consote.Write(\"Enter a number: \"); \n                index = Convert.ToInt32(Console.ReadLine()); \n                a[index] = val;\n            }\n            catch(Exception e)\n            {\n                Console.Write(\"Exception occurred \");\n            }\n            Console.Write(\"Remaining program \");\n        }\n    }\n}", "opta": "It will output: Exception occurred", "optb": "It will output: Remaining program", "optc": "It will output: Exception occurred Remaining program", "optd": "It will output: Remaining program Exception occurred", "opte": "The value 66 will get assigned to a[6].", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about the C#.NET program given below if a value \"ABCD\" is input to it?\nusing System;\nnamespace IndiabixConsoleApplication\n{\n    class MyProgram\n    {\n        static void Main(string[] args)\n        {\n            int index; \n            int val = 55; \n            int[] a = new int[5]; \n            try\n            {\n                Console.Write(\"Enter a number: \");\n                index = Convert.ToInt32(Console.ReadLine());\n                a[index] = val;\n            }\n            catch(FormatException e)\n            {\n                Console.Write(\"Bad Format \");\n            }\n            catch(IndexOutOfRangeException e)\n            {\n                Console.Write(\"Index out of bounds \");\n            }\n            Console.Write(\"Remaining program \");\n        }\n    }\n}", "opta": "It will output: Bad Format", "optb": "It will output: Remaining program", "optc": "It will output: Index out of bounds", "optd": "It will output: Bad Format Remaining program", "opte": "It will output: Index out of bounds Remaining program", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "All code inside finally block is guaranteed to execute irrespective of whether an exception occurs in the protected block or not.", "opta": "True", "optb": "False", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is NOT an Exception?", "opta": "StackOverflow", "optb": "Division By Zero", "optc": "Insufficient Memory", "optd": "Incorrect Arithmetic Expression", "opte": "Arithmetic overflow or underflow", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about the C#.NET program given below if a value \"ABCD\" is input to it?\nusing System;\nnamespace IndiabixConsoleApplication\n{\n    class MyProgram\n    {\n        static void Main(string[] args)\n        {\n            int index; \n            int vat = 88;\n            int[] a = new int(5];\n            try\n            {\n                Console.Write(\"Enter a number: \");\n                index = Convert.Toint32(Console.ReadLine());\n                a[index] = val;\n            }\n            catch(Exception e)\n            {\n                Console.Write(\"Exception occurred\");\n            }\n            Console.Write(\"Remaining program\");\n        }\n    }\n}", "opta": "It will output: Exception occurred", "optb": "It will output: Remaining program", "optc": "It will output: Remaining program Exception occurred", "optd": "It will output: Exception occurred Remaining program", "opte": "The value 88 will get assigned to a[0].", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "It is compulsory for all classes whose objects can be thrown with throw statement to be derived from System.Exception class.", "opta": "True", "optb": "False", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following will be the correct output for the C#.NET program given below?\nnamespace IndiabixConsoleApplication\n{ \n    class SampleProgram\n    {\n        static void Main(string[] args)\n        { \n            int num = 1;\n            funcv(num); \n            Console.Write(num + \", \"); \n            funcr(ref num); \n            Console.Write(num + \", \");\n        }\n        static void funcv(int num)\n        { \n            num = num + 10; Console.Write(num + \", \");\n        }\n        static void funcr (ref int num)\n        { \n            num = num + 10; Console.Write(num + \", \");\n        } \n    } \n}", "opta": "1, 1, 1, 1,", "optb": "11, 1, 11, 11,", "optc": "11, 11, 11, 11,", "optd": "11, 11, 21, 11,", "opte": "11, 11, 21, 21,", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "What will be the output of the C#.NET code snippet given below?\nnamespace IndiabixConsoleApplication\n{ \n    class SampleProgram\n    { \n        static void Main(string[] args)\n        { \n            int[]arr = newint[]{ 1, 2, 3, 4, 5 }; \n            fun(ref arr);\n        }\n        static void fun(ref int[] a)\n        { \n            for (int i = 0; i < a.Length; i++)\n            { \n                a[i] = a[i] * 5; \n                Console.Write(a[ i ] + \" \"); \n            } \n        } \n    } \n}", "opta": "1 2 3 4 5", "optb": "6 7 8 9 10", "optc": "5 10 15 20 25", "optd": "5 25 125 625 3125", "opte": "6 12 18 24 30", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct?\nAn argument passed to a ref parameter need not be initialized first.\nVariables passed as out arguments need to be initialized prior to being passed.\nArgument that uses params keyword must be the last argument of variable argument list of a method.\nPass by reference eliminates the overhead of copying large data items.\nTo use a ref parameter only the calling method must explicitly use the ref keyword.", "opta": "1, 2", "optb": "2, 3", "optc": "3, 4", "optd": "4, 5", "opte": "None of these", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "A function returns a value, whereas a subroutine cannot return a value.", "opta": "True", "optb": "False", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about functions and subroutines used in C#.NET?\nA function cannot be called from a subroutine.\nThe ref keyword causes arguments to be passed by reference.\nWhile using ref keyword any changes made to the parameter in the method will be reflected in that variable when control passes back to the calling method.\nA subroutine cannot be called from a function.\nFunctions and subroutines can be called recursively.", "opta": "1, 2, 4", "optb": "2, 3, 5", "optc": "3, 5", "optd": "4, 5", "opte": "None of these", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following will be the correct output for the C#.NET program given below?\nnamespace IndiabixConsoleApplication\n{ \n    class SampleProgram\n    { \n        static void Main(string[] args)\n        {\n            int a = 5; \n            int s = 0, c = 0;\n            Proc(a, ref s, ref c);\n            Console.WriteLine(s + \" \" + c);\n        }\n        static void Proc(int x, ref int ss, ref int cc)\n        {\n            ss = x * x;\n            cc = x * x * x;\n        } \n    } \n}", "opta": "0 0", "optb": "25 25", "optc": "125 125", "optd": "25 125", "opte": "None of the above", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "What will be the output of the C#.NET code snippet given below?\nnamespace IndiabixConsoleApplication\n{\n    class SampleProgram\n    {\n        static void Main(string[ ] args)\n        {\n            int i = 10;\n            double d = 34.340;\n            fun(i);\n            fun(d);\n        }\n        static void fun(double d)\n        {\n            Console.WriteLine(d + \" \");\n        }\n    }\n}", "opta": "10.000000 34.340000", "optb": "10 34", "optc": "10 34.340", "optd": "10 34.34", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct?\nC# allows a function to have arguments with default values.\nC# allows a function to have variable number of arguments.\nOmitting the return value type in method definition results into an exception.\nRedefining a method parameter in the method's body causes an exception.\nparams is used to specify the syntax for a function with variable number of arguments.", "opta": "1, 3, 5", "optb": "3, 4, 5", "optc": "2, 5", "optd": "4, 5", "opte": "None of these", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "If a procedure fun() is to receive an int, a Single & a double and it is to return a decimal then which of the following is the correct way of defining this procedure?", "opta": "fun(int i, Single j, double k) decimal \n{ ... }", "optb": "static decimal fun(int i, Single j, double k) \n{ ... }", "optc": "fun(int i, Single j, double k) \n{\n    ...\n    return decimal; \n}", "optd": "static decimal fun(int i, Single j, double k) decimal \n{ ... }", "opte": "A procedure can never return a value.", "ans": "E", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "If a function fun() is to receive an int, a Single & a double and it is to return a decimal then which of the following is the correct way of defining this function?", "opta": "decimal static fun(int i, Single j, double k)\n{ ... }", "optb": "decimal fun(int i, Single j, double k)\n{ ... }", "optc": "static decimal fun(int i, Single j, double k)\n{ ... }", "optd": "static decimal fun(int i, Single j, double k) decimal\n{ ... }", "opte": "static fun(int i, Single j, double k)\n{ \n    ... \n    return decimal;\n}", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about functions used\nin C#.NET?\nFunction definitions cannot be nested.\nFunctions can be called recursively.\nIf we do not return a value from a function then a value -1 gets returned.\nTo return the control from middle of a function exit function should be used.\nFunction calls can be nested.", "opta": "1, 2, 5", "optb": "2, 3, 5", "optc": "2, 3", "optd": "4, 5", "opte": "None of these", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "How many values is a function capable of returning?", "opta": "1", "optb": "0", "optc": "Depends upon how many params arguments does it use.", "optd": "Any number of values.", "opte": "Depends upon how many ref arguments does it use.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "What will be the output of the C#.NET code snippet given below?\nnamespace IndiabixConsoleApplication\n{\n    class SampleProgram\n    {\n        static void Main(string[ ] args)\n        {\n            object[] o = new object[] {\"1\", 4.0, \"India\", 'B'};\n            fun (o);\n        }\n        static void fun (params object[] obj)\n        {\n            for (int i = 0; i < obj.Length-1; i++)\n            Console.Write(obj[i] + \" \");\n        }\n    }\n}", "opta": "1 4.0 India B", "optb": "1 4.0 India", "optc": "1 4 India", "optd": "1 India B", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "How many values is a subroutine capable of returning?", "opta": "Depends upon how many params arguments does it use.", "optb": "Any number of values.", "optc": "Depends upon how many ref arguments does it use.", "optd": "0", "opte": "1", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following CANNOT occur multiple number of times in a program?", "opta": "namespace", "optb": "Entrypoint", "optc": "Class", "optd": "Function", "opte": "Subroutine", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "What will be the output of the C#.NET code snippet given below?\nnamespace IndiabixConsoleApplication\n{\n    class SampleProgram\n    {\n        static void Main(string[ ] args)\n        {\n            int i;\n            int res = fun(out i);\n            Console.WriteLine(res);\n        }\n        static int fun (out int i)\n        {\n            int s = 1;\n            i = 7;\n            for(int j = 1; j <= i; j++)\n            {\n                s = s * j;\n            }\n            return s;\n        } \n    } \n}", "opta": "1", "optb": "7", "optc": "8", "optd": "720", "opte": "5040", "ans": "E", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "If a function fun() is to sometimes receive an int and sometimes a double then which of the following is the correct way of defining this function?", "opta": "static void fun(object i)\n{ ... }", "optb": "static void fun(int i)\n{ ... }", "optc": "static void fun(double i, int j)\n{ ... }", "optd": "static void fun(int i, double j)\n{ ... }", "opte": "static void fun(int i, double j, )\n{ ... }", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about subroutines used in C#.NET?\nIf we do not return a value from a subroutine then a value -1 gets returned.\nSubroutine definitions cannot be nested.\nSubroutine can be called recursively.\nTo return the control from middle of a subroutine exit subroutine should be used.\nSubroutine calls can be nested.", "opta": "1, 2, 3", "optb": "2, 3, 5", "optc": "3, 5", "optd": "3, 4", "opte": "None of these", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "A function can be used in an expression, whereas a subroutine cannot be.", "opta": "True", "optb": "False", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about the C#.NET program given below?\nnamespace IndiabixConsoleApplication\n{ \n    class SampleProgram\n    { \n        static void Main(string[ ] args)\n        { \n            int a = 5;\n            int s = 0, c = 0; \n            s, c = fun(a); \n            Console.WriteLine(s +\" \" + c) ;\n        }\n        static int fun(int x)\n        {\n            int ss, cc;\n            ss = x * x; cc = x * x * x; \n            return ss, cc;\n        } \n    } \n}\nAn error will be reported in the statement s, c = fun(a); since multiple values returned from a function cannot be collected in this manner.\nIt will output 25 125.\nIt will output 25 0.\nIt will output 0 125.\nAn error will be reported in the statement return ss, cc; since a function cannot return multiple values.", "opta": "1, 3", "optb": "2, 4", "optc": "4, 5", "optd": "1, 5", "opte": "None of these", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "What will be the output of the C#.NET code snippet given below?\nnamespace IndiabixConsoleApplication\n{\n    class SampleProgram\n    {\n        static void Main(string[ ] args)\n        {\n            int i = 5;\n            int j;\n            fun1(ref i);\n            fun2(out j);\n            Console.WriteLine(i + \", \" + j);\n        }\n        static void funl(ref int x)\n        {\n            x = x * x;\n        }\n        static void fun2(out int x)\n        {\n            x = 6; \n            x = x * x; \n        }\n    }\n}", "opta": "5, 6", "optb": "5, 36", "optc": "25, 36", "optd": "25, 0", "opte": "5, 0", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which one of the following classes are present System.Collections.Generic namespace?\nStack\nTree\nSortedDictionary\nSortedArray", "opta": "1 and 2 only", "optb": "2 and 4 only", "optc": "1 and 3 only", "optd": "All of the above", "opte": "None of the above", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "For the code snippet shown below, which of the following statements are valid?\npublic class Generic<T>\n{\n    public T Field; \n    public void TestSub()\n    {\n        T i = Field + 1;\n    }\n}\nclass MyProgram\n{\n    static void Main(string[] args)\n    {\n        Generic<int> gen = new Generic<int>();\n        gen.TestSub();\n    }\n}", "opta": "Addition will produce result 1.", "optb": "Result of addition is system-dependent.", "optc": "Program will generate run-time exception.", "optd": "Compiler will report an error: Operator '+' is not defined for types T and int.", "opte": "None of the above.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are valid about generics in .NET Framework?\nGenerics is a language feature.\nWe can create a generic class, however, we cannot create a generic interface in C#.NET.\nGenerics delegates are not allowed in C#.NET.\nGenerics are useful in collection classes in .NET framework.\nNone of the above", "opta": "1 and 2 Only", "optb": "1, 2 and 3 Only", "optc": "1 and 4 Only", "optd": "All of the above", "opte": "None of the above", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which  of the  following  statements  is  valid  about  generic procedures in C#.NET?", "opta": "All procedures in a Generic class are generic.", "optb": "Only those procedures labeled as Generic are generic.", "optc": "Generic procedures can take at the most one generic parameter.", "optd": "Generic procedures must take at least one type parameter.", "opte": "None of the above.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "For the code  snippet shown below, which of the  following statements are valid?\npublic class TestIndiaBix\n{\n    public void TestSub<M> (M arg)\n    {\n        Console.Write(arg);\n    }\n}\nclass MyProgram\n{\n    static void Main(string[] args)\n    {\n        TestIndiaBix bix = new TestIndiaBix();\n        bix.TestSub(\"IndiaBIX \");\n        bix.TestSub(4.2f);\n    }\n}", "opta": "Program will compile and on execution will print: IndiaBIX 4.2", "optb": "A non generic class Hello cannot have generic subroutine.", "optc": "Compiler will generate an error.", "optd": "Program will generate a run-time exception.", "opte": "None of the above.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "For the code snippet given below, which of the following statements is valid?\npublic class Generic<T>\n{\n    public T Field;\n}\nclass Program\n{\n    static void Main(string[ ] args)\n    {\n        Generic<String> g = new Generic<String>();\n        g.Field = \"Hello\";\n        Console.WriteLine(g.Field);\n    }\n}", "opta": "It will print string \"Hello\" on the console.", "optb": "Name Generic cannot be used as a class name because it's a keyword.", "optc": "Compiler will give an error.", "optd": "Member Field of class Generic is not accessible directly.", "opte": "None of the above.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "For the code  snippet given below, which of the following statements are valid?\npublic class MyContainer<T> where T: IComparabte\n{\n    // Insert code here\n}\nClass  MyContainer  requires  that  it's  type  argument  must implement IComparabte interface.\nType argument of class MyContainer must be IComparabte.\nCompiler will report an error for this block of code.\nThis requirement on type argument is called as constraint.", "opta": "1 and 2 Only", "optb": "1, 2 and 3 Only", "optc": "1 and 4 Only", "optd": "All of the above", "opte": "None of the above", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "For the code  snippet given below, which of the following statements are valid?\npublic class MyContainer<T> where T: class, IComparable\n{\n    //Insert code here\n}\nClass  MyContainer  requires  that  it's  type  argument must implement IComparable interface.\nCompiler will report an error for this block of code.\nThere are multiple constraints on type argument to MyContainer class.\nClass MyContainer requires that its type argument must be a reference type and it must implement IComparable interface.", "opta": "1 and 2 Only", "optb": "3 and 4 Only", "optc": "2 and 3 Only", "optd": "All of the above", "opte": "None of the above", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is valid about advantages of generics?", "opta": "Generics shift the burden of type safety to the programmer rather than compiler.", "optb": "Generics require use of explicit type casting.", "optc": "Generics provide type safety without the overhead of multiple implementations.", "optd": "Generics eliminate the possibility of run-time errors.", "opte": "None of the above.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following can be facilitated by the Inheritance mechanism?\nUse the existing functionality of base class.\nOverrride the existing functionality of base class.\nImplement new functionality in the derived class.\nImplement polymorphic behaviour.\nImplement containership.", "opta": "1, 2, 3", "optb": "3, 4", "optc": "2, 4, 5", "optd": "3, 5", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements should be added to the subroutine fun( ) if the C#.NET code snippet given below is to output 9 13?\nclass BaseClass\n{\n    protected int i = 13;\n}\nclass Derived: BaseClass\n{\n    int i = 9; \n    public void fun()\n    {\n        // [*** Add statement here ***]\n    } \n}", "opta": "Console.WriteLine(base.i + \" \" + i);", "optb": "Console.WriteLine(i + \" \" + base.i);", "optc": "Console.WriteLine(mybase.i + \" \" + i);", "optd": "Console.WriteLine(i + \" \" + mybase.i);", "opte": "Console.WriteLine(i + \" \" + this.i);", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about the C#.NET code snippet given below?\nnamespace IndiabixConsoleApplication\n{ \n    class index\n    {\n        protected int count;\n        public index()\n        {\n            count = 0;\n        }\n    }\n    class index1: index\n    {\n        public void increment()\n        {\n            count = count +1;\n        }\n    }\n    class MyProgram\n    {\n        static void Main(string[] args)\n        {\n            index1 i = new index1(); \n            i.increment(); \n        }\n    }\n}\ncount should be declared as public if it is to become available in the inheritance chain.\ncount should be declared as protected if it is to become available in the inheritance chain.\nWhile constructing an object referred to by i firstly constructor of index class will be called followed by constructor of index1 class.\nConstructor of index class does not get inherited in index1 class.\ncount should be declared as Friend if it is to become available in the inheritance chain.", "opta": "1, 2, 5", "optb": "2, 3, 4", "optc": "3, 5", "optd": "4, 5", "opte": "None of these", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "What will be the size of the object created by the following C#.NET code snippet?\nnamespace IndiabixConsoleApplication\n{ \n    class Baseclass\n    {\n        private int i; \n        protected int j; \n        public int k;\n    }\n    class Derived: Baseclass\n    {\n        private int x; \n        protected int y; \n        public int z;\n    }\n    class MyProgram\n    { \n        static void Main (string[ ] args)\n        { \n            Derived d = new Derived();\n        } \n    } \n}", "opta": "24 bytes", "optb": "12 bytes", "optc": "20 bytes", "optd": "10 bytes", "opte": "16 bytes", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which statement will you add in the function fun() of class B, if it is to produce the output \"Welcome to IndiaBIX.com!\"?\nnamespace IndiabixConsoleApplication\n{ \n    class A\n    {\n        public void fun()\n        {\n            Console.Write(\"Welcome\");\n        } \n    } \n    class B: A\n    {\n        public void fun()\n        {\n            // [*** Add statement here ***]\n            Console.WriteLine(\" to IndiaBIX.com!\");\n        } \n    } \n    class MyProgram\n    { \n        static void Main (string[ ] args)\n        { \n            B b = new B(); \n            b.fun();\n        } \n    } \n}", "opta": "base.fun();", "optb": "A::fun();", "optc": "fun();", "optd": "mybase.fun();", "opte": "A.fun();", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "What will be the output of the C#.NET code snippet given below?\nnamespace IndiabixConsoleApplication\n{ \n    class Baseclass\n    { \n        public void fun()\n        { \n            Console.Write(\"Base class\" + \" \");\n        } \n    } \n    class Derived1: Baseclass\n    { \n        new void fun()\n        {\n            Console.Write(\"Derived1 class\" + \" \"); \n        } \n    } \n    class Derived2: Derived1\n    { \n        new void fun()\n        { \n            Console.Write(\"Derived2 class\" + \" \");\n        }\n    }\n    class Program\n    { \n        public static void Main(string[ ] args)\n        { \n            Derived2 d = new Derived2(); \n            d.fun(); \n        } \n    } \n}", "opta": "Base class", "optb": "Derived1 class", "optc": "Derived2 class", "optd": "Base class Derived1 class", "opte": "Base class Derived1 class Derived2 class", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following should be used to implement a 'Has a' relationship between two entities?", "opta": "Polymorphism", "optb": "Templates", "optc": "Containership", "optd": "Encapsulation", "opte": "Inheritance", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is correct about the C#.NET snippet given below?\nnamespace IndiabixConsoleApplication\n{ \n    class Baseclass\n    { \n        public void fun()\n        { \n            Console.WriteLine(\"Hi\" + \" \");\n        } \n        public void fun(int i)\n        {\n            Console.Write(\"Hello\" + \" \");\n        } \n    } \n    class Derived: Baseclass\n    {\n        public void fun()\n        {\n            Console.Write(\"Bye\" + \" \");\n        } \n    } \n    class MyProgram\n    { \n        static void Main(string[ ] args)\n        { \n            Derived d; \n            d = new Derived(); \n            d.fun(); \n            d.fun(77);\n        } \n    } \n}", "opta": "The program gives the output as: Hi Hello Bye", "optb": "The program gives the output as: Bye Hello", "optc": "The program gives the output as: Hi Bye Hello", "optd": "Error in the program", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "In an inheritance chain which of the following members of base class are accessible to the derived class members?\nstatic\nprotected\nprivate\nshared\npublic", "opta": "1, 3", "optb": "2, 5", "optc": "3, 4", "optd": "4, 5", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which  of the  following are reuse  mechanisms available  in C#.NET?\nInheritance\nEncapsulation\nTemplates\nContainership\nPolymorphism", "opta": "1, 4", "optb": "1, 3", "optc": "2, 4", "optd": "3, 5", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following should be used to implement a 'Like a' or a 'Kind of' relationship between two entities?", "opta": "Polymorphism", "optb": "Containership", "optc": "Templates", "optd": "Encapsulation", "opte": "Inheritance", "ans": "E", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "How can you prevent inheritance from a class in C#.NET ?", "opta": "Declare the class as shadows.", "optb": "Declare the class as overloads.", "optc": "Declare the class as sealed.", "optd": "Declare the class as suppress.", "opte": "Declare the class as override.", "ans": "C", "explanation": "C#.NET allows sealed attribute to be used as a part of class statement. Classes declared with sealed keyword cannot be used as based class for other classes.  Most important reason to do this world be to prevent behavior of a class to be changed in any way."}, {"question": "Which of the following statements are correct about Inheritance in C#.NET?\nA derived class object contains all the base class data.\nInheritance cannot suppress the base class functionality.\nA derived class may not be able to access all the base class data.\nInheritance cannot extend the base class functionality.\nIn inheritance chain construction of object happens from base towards derived.", "opta": "1, 2, 4", "optb": "2, 4, 5", "optc": "1, 3, 5", "optd": "2, 4", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Assume class B is inherited from class A. Which of the following statements is correct about construction of an object of class B?", "opta": "While creating the object firstly the constructor of class B will be called followed by constructor of class A.", "optb": "While creating the object firstly the constructor of class A will be called followed by constructor of class B.", "optc": "The constructor of only class B will be called.", "optd": "The constructor of only class A will be called.", "opte": "The order of calling constructors depends upon whether constructors in class A and class B are private or public.", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about the C#.NET program given below?\nnamespace IndiabixConsoleApplication\n{\n    class Baseclass\n    { \n        int i;\n        public Baseclass(int ii)\n        {\n            i = ii;\n            Console.Write(\"Base \"); \n        } \n    } \n    class Derived : Baseclass\n    {\n        public Derived(int ii) : base(ii)\n        {\n            Console.Write(\"Derived \");\n        } \n    } \n    class MyProgram\n    { \n        static void Main(string[ ] args)\n        { \n            Derived d = new Derived(10);\n        } \n    } \n}", "opta": "The program will work correctly only if we implement zero-argument constructors in Baseclass as well as Derived class.", "optb": "The program will output: Derived Base", "optc": "The program will report an error in the statement base(ii).", "optd": "The program will work correctly if we replace base(ii) with base.Baseclass(ii).", "opte": "The program will output: Base Derived", "ans": "E", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about the C#.NET code snippet given below?\ninterface IMyInterface\n{ \n    void fun1(); \n    int fun2();\n}\nclass MyClass: IMyInterface\n{ \n    void fun1()\n    { } \n    int IMyInterface.fun2()\n    { } \n}", "opta": "A function cannot be declared inside an interface.", "optb": "A subroutine cannot be declared inside an interface.", "optc": "A Method Table will not be created for class MyClass.", "optd": "MyClass is an abstract class.", "opte": "The definition of fun1() in class MyClass should be void IMyInterface.fun1().", "ans": "E", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following can be declared in an interface?\nProperties\nMethods\nEnumerations\nEvents\nStructures", "opta": "1, 3", "optb": "1, 2, 4", "optc": "3, 5", "optd": "4, 5", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "A class implements two interfaces each containing three methods. The class contains no instance data. Which of the following correctly indicate the size of the object created from this class?", "opta": "12 bytes", "optb": "24 bytes", "optc": "0 byte", "optd": "8 bytes", "opte": "16 bytes", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about an interface used in C#.NET?", "opta": "One class can implement only one interface.", "optb": "In a program if one class implements an interface then no other class in the same program can implement this interface.", "optc": "From two base interfaces a new interface cannot be inherited.", "optd": "Properties can be declared inside an interface.", "opte": "Interfaces cannot be inherited.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about Interfaces used in C#.NET?", "opta": "All interfaces are derived from an Object class.", "optb": "Interfaces can be inherited.", "optc": "All interfaces are derived from an Object interface.", "optd": "Interfaces can contain only method declaration.", "opte": "Interfaces can contain static data and methods.", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about an interface used in C#.NET?", "opta": "If a class implements an interface partially, then it should be an abstract class.", "optb": "A class cannot implement an interface partially.", "optc": "An interface can contain static methods.", "optd": "An interface can contain static data.", "opte": "Multiple interface inheritance is not allowed.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about an interface?", "opta": "One interface can be implemented in another interface.", "optb": "An interface can be implemented by multiple classes in the same program.", "optc": "A class that implements an interface can explicitly implement members of that interface.", "optd": "The functions declared in an interface have a body.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about an interface in C#.NET?\nA class can implement multiple interfaces.\nStructures  cannot  inherit a class  but can  implement an interface.\nIn  C#.NET,   :   is  used  to  signify that  a  class  member implements a specific interface.\nAn interface can implement multiple classes.\nThe static attribute can be used with a method that implements an interface declaration.", "opta": "1, 2, 3", "optb": "2, 4", "optc": "3, 5", "optd": "None of the above.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is the correct implementation of the interface given below?\ninterface IMyInterface\n{ \n    double MyFun(Single i);\n}", "opta": "class MyClass\n{\n    double MyFun(Single i) as IMyInterface.MyFun\n    {\n        // Some code\n    }\n}", "optb": "class MyClass \n{\n    MyFun (Single i) As Double\n    {\n        // Some code\n    } \n}", "optc": "class MyClass: implements IMyInterface\n{\n    double fun(Single si) implements IMyInterface.MyFun()\n    {\n        //Some code\n    } \n}", "optd": "class MyClass: IMyInterface\n{\n    double IMyInterface.MyFun(Single i)\n    {\n        // Some code\n    } \n}", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct?", "opta": "When   a   class   inherits   an   interface   it   inherits   member definitions as well as its implementations.", "optb": "An interface cannot contain the signature of an indexer.", "optc": "Interfaces members are automatically public.", "optd": "To implement an interface member, the corresponding member in the class must be public as well as static.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about an interface used in C#.NET?\nAn interface can contain properties, methods and events.\nThe  keyword  must implement forces  implementation  of an interface.\nInterfaces can be overloaded.\nInterfaces can be implemented by a class or a struct.\nEnhanced implementations of an interface can be developed without breaking existing code.", "opta": "1, 2", "optb": "1, 4, 5", "optc": "3, 4", "optd": "3 only", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following can implement an interface?\nData\nClass\nEnum\nStructure\nNamespace", "opta": "1, 3", "optb": "2, 4", "optc": "3, 5", "optd": "4 only", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about the C#.NET code snippet given below?\ninterface IMyInterface \n{\n    void fun1(); \n    void fun2();\n}\nclass MyClass: IMyInterface\n{ \n    private int i; \n    void IMyInterface.fun1()\n    { \n        // Some code\n    } \n}", "opta": "Class MyClass is an abstract class.", "optb": "Class MyClass cannot contain instance data.", "optc": "Class MyClass fully implements the interface IMyInterface.", "optd": "Interface IMyInterface should be inherited from the Object class.", "opte": "The compiler will report an error since the interface IMyInterface is only partially implemented.", "ans": "E", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about the C#.NET code snippet given below?\ninterface IPerson\n{ \n    String FirstName\n    { \n        get; \n        set;\n    }\n    String LastName\n    {\n        get; \n        set;\n    }\n    void Print(); \n    void Stock(); \n    int Fun(); \n}", "opta": "Properties cannot be declared inside an interface.", "optb": "This is a perfectly workable interface.", "optc": "The properties in the interface must have a body.", "optd": "Subroutine in the interface must have a body.", "opte": "Functions cannot be declared inside an interface.", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is the correct way to implement the interface given below?\ninterface IPerson\n{ \n    String FirstName\n    {\n        get;\n        set; \n    } \n}", "opta": "class Employee : IPerson\n{\n    private String str; \n    public String FirstName\n    {\n        get\n        { \n            return str;\n        } \n        set\n        { \n            str = value;\n        } \n    } \n}", "optb": "class Employee\n{\n    private String str;\n    public String IPerson.FirstName\n    { \n        get\n        { \n            return str;\n        } \n        set\n        { \n            str = value;\n        } \n    } \n}", "optc": "class Employee : implements IPerson\n{\n    private String str; \n    public String FirstName\n    { \n        get\n        { \n            return str;\n        } \n        set\n        {\n            str = value; \n        } \n    } \n}", "optd": "None of the above", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "If a namespace is present in a library then which of the following is the correct way to use the elements of the namespace?", "opta": "Add Reference of the namespace.Use the elements of the namespace.", "optb": "Add Reference of the namespace.Import the namespace.Use the elements of the namespace.", "optc": "Import the namespace.Use the elements of the namespace.", "optd": "Copy the library in the same directory as the project that is trying to use it.Use the elements of the namespace.", "opte": "Install the namespace in Global Assembly Cache.Use the elements of the namespace.", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is NOT a namespace in the  .NET Framework Class Library?", "opta": "System.Process", "optb": "System.Security", "optc": "System.Threading", "optd": "System.Drawing", "opte": "System.Xml", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statments are the correct way to call the method Issue() defined in the code snippet given below?\nnamespace College\n{\n    namespace Lib\n    {\n        class Book\n        {\n            public void Issue()\n            {\n                // Implementation code\n            }\n        }\n        class Journal\n        {\n            public void Issue()\n            {\n                // Implementation code\n            }\n        }\n    }\n}\nCollege.Lib.Book b = new College.Lib.Book(); \nb.Issue();\nBook b = new Book(); \nb.Issue();\nusing College.Lib; \nBook b = new Book(); \nb.Issue();\nusing College;\nLib.Book b = new Lib.Book(); \nb.Issue();\nusing College.Lib.Book; \nBook b = new Book(); \nb.Issue();", "opta": "1, 3", "optb": "2, 4", "optc": "3", "optd": "4, 5", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about a namespace in C#.NET?", "opta": "Namespaces help us to control the visibility of the elements present in it.", "optb": "A namespace can contain a class but not another namespace.", "optc": "If not mentioned, then the name 'root' gets assigned to the namespace.", "optd": "It is necessary to use the using statement to be able to use an element of a namespace.", "opte": "We need to organise the classes declared in Framework Class Library into different namespaces.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is absolutely neccessary to use a class Point present in namespace Graph stored in library?", "opta": "Use fully qualified name of the Point class.", "optb": "Use using statement before using the Point class.", "optc": "Add Reference of the library before using the Point class.", "optd": "Use using statement before using the Point class.", "opte": "Copy the library into the current project directory before using the Point class.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "If a class called Point is present in namespace n1 as well as in namespace n2, then which of the following is the correct way to use the Point class?", "opta": "namespace IndiabixConsoleApplication\n{ \n    class MyProgram\n    { \n        static void Main(string[] args)\n        { \n            import n1; \n            Point x = new Point();\n            x.fun();\n            import n2;\n            Point y = new Point(); \n            y.fun();\n        }\n    }\n}", "optb": "import n1; \nimport n2;\nnamespace IndiabixConsoleApplication\n{ \n    class MyProgram\n    { \n        static void Main(string[] args)\n        {\n            n1.Point x = new n1.Point(); \n            x.fun();\n            n2.Point y = new n2.Point(); \n            y.fun();\n        }\n    }\n}", "optc": "namespace IndiabixConsoleApplication\n{ \n    class MyProgram\n    {\n        static void Main(string[] args)\n        {\n            using n1;\n            Point x = new Point();\n            x.fun();\n            using n2;\n            Point y = new Point();\n            y.fun();\n        }\n    }\n}", "optd": "using n1;\nusing n2; \nnamespace IndiabixConsoleApplication\n{ \n    class MyProgram\n    { \n        static void Main(string[] args)\n        { \n            n1.Point x = new n1.Point(); \n            x.fun();\n            n2.Point y = new n2.Point(); \n            y.fun(); \n        } \n    } \n}", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the followings are NOT a .NET namespace?\nSystem.Web\nSystem.Process\nSystem.Data\nSystem.Drawing2D\nSystem.Drawing3D", "opta": "1, 3", "optb": "2, 4, 5", "optc": "3, 5", "optd": "1, 2, 3", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about namespaces in C#.NET?", "opta": "Namespaces can be nested only up to level 5.", "optb": "A namespace cannot be nested.", "optc": "There is no limit on the number of levels while nesting namespaces.", "optd": "If namespaces are nested, then it is necessary to use using statement while using the elements of the inner namespace.", "opte": "Nesting of namespaces is permitted, provided all the inner namespaces are declared in the same file.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is correct way to rewrite the C#.NET code snippet given below?\nusing Microsoft.VisualBasic;\nusing System.Windows.Forms;\nMessageBox.Show(\"Wait for a\" + ControlChars.CrLf + \"miracle\");", "opta": "using System.Windows.Forms;\nusing CtrlChars = Microsoft.VisualBasic.ControlChars; \nMessageBox.Show(\"Wait for a\" + CrLf + \"miracle\");", "optb": "using Microsoft.VisualBasic; \nusing System.Windows.Forms; \nCtrlChars = ControlChars;\nMessageBox.Show(\"Wait for a\" + CtrlChars.CrLf + \"miracle\");", "optc": "using Microsoft.VisualBasic; \nusing System.Windows.Forms; \nCtrlChars = ControlChars; \nMessageBox.Show (\"Wait for a\" + CrLf + \"miracle\");", "optd": "using System.Windows.Forms;\nusing CtrlChars = Microsoft.VisualBasic.ControlChars; \nMessageBox.Show(\"Wait for a\" + CtrlChars.CrLf + \"miracle\");", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about the using statement used in C#.NET?", "opta": "using statement can be placed anywhere in the C#.NET source code file.", "optb": "It is permitted to define a member at namespace level as a using alias.", "optc": "A C#.NET source code file can contain any number of using statement.", "optd": "By using using statement it is possible to create an alias for the namespace but not for the namespace element.", "opte": "By using using statement it is possible to create an alias for the namespace element but not for the namespace.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about a namespace used in C#.NET?\nClasses must belong to a namespace, whereas structures need not.\nEvery class, struct, enum, delegate and interlace has to belong to some or the other namespace.\nAll elements of the namespace have to belong to one file.\nIf not mentioned, a namespace takes the name of the current project.\nThe namespace should be imported to be able to use the elements in it.", "opta": "1, 3", "optb": "2, 4, 5", "optc": "3, 5", "optd": "4 only", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following CANNOT belong to a C#.NET Namespace?", "opta": "class", "optb": "struct", "optc": "enum", "optd": "Data", "opte": "interface", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about a namespace used in C#.NET?", "opta": "Nested namespaces are not allowed.", "optb": "Importing outer namespace imports inner namespace.", "optc": "Nested namespaces are allowed.", "optd": "If nested, the namespaces cannot be split across files.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following C#.NET code snippets will correctly print \"Hello C#.NET\"?", "opta": "import System; \nnamespace IndiabixConsoleApplication\n{ \n    class MyProgram\n    { \n        static void Main(string[] args)\n        { \n            Console.WriteLine(\"Hello C#.NET\");\n        } \n    } \n}", "optb": "using System;\nnamespace IndiabixConsoleApplication\n{ \n    class MyProgram\n    { \n        static void Main(string[ ] args)\n        { \n            WriteLine(\"Hello C#.NET\");\n        } \n    } \n}", "optc": "using System.Console; \nnamespace IndiabixConsoleApplication\n{ \n    class MyProgram\n    { \n        static void Main (string[ ] args)\n        { \n            WriteLine(\"Hello C#.NET\");\n        } \n    } \n}", "optd": "using System;\nnamespace IndiabixConsoleApplication\n{ \n    class MyProgram\n    { \n        static void Main(string[] args)\n        { \n            Console.WriteLine(\"Hello C#.NET\");\n        }\n    }\n}", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "If ListBox is class present in System.Windows.Forms namespace, then which of the following statements are the correct way to create an object of ListBox Class?\nusing System.Windows.Forms; \nListBox lb = new ListBox();\nusing LBControl = System.Windows.Forms;\nLBControl lb = new LBControl();\nSystem.Windows.Forms.ListBox lb = new System.Windows.Forms.ListBox();\nusing LBControl lb = new System.Windows.Forms.ListBox;\nusing LBControl = System.Windows.Forms.ListBox; \nLBControl lb = new LBControl();", "opta": "1, 3", "optb": "2, 4, 5", "optc": "1, 3, 5", "optd": "5 only", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following are the correct ways to increment the value of variable a by 1?\n++a++;\na += 1;\na ++ 1;\na = a +1;\na = +1;", "opta": "1, 3", "optb": "2, 4", "optc": "3, 5", "optd": "4, 5", "opte": "None of these", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "What will be the output of the C#.NET code snippet given below?\nbyte b1 = 0xF7;\nbyte b2 = 0xAB;\nbyte temp;\ntemp = (byte)(b1 & b2);\nConsole.Write (temp + \" \");\ntemp = (byte)(b1^b2);\nConsole.WriteLine(temp);", "opta": "163 92", "optb": "92 163", "optc": "192 63", "optd": "0 1", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is NOT an Arithmetic operator in C#.NET?", "opta": "**", "optb": "+", "optc": "/", "optd": "%", "opte": "*", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following are NOT Relational operators in C#.NET?\n>=\n!=\nNot\n<=\n<>=", "opta": "1, 3", "optb": "2, 4", "optc": "3, 5", "optd": "4, 5", "opte": "None of these", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is NOT a Bitwise operator in C#.NET?", "opta": "&", "optb": "|", "optc": "<<", "optd": "^", "opte": "~", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about the C#.NET code snippet given below?\nint d; \nd = Convert.ToInt32( !(30 < 20) );", "opta": "A value 0 will be assigned to d.", "optb": "A value 1 will be assigned to d.", "optc": "A value -1 will be assigned to d.", "optd": "The code reports an error.", "opte": "The code snippet will work correctly if ! is replaced by Not.", "ans": "B", "explanation": "Sample Program:\nbool falseFlag = false;\nbool trueFlag = true;\n\nConsole.WriteLine(\"{0} converts to {1}.\", falseFlag,\n                  Convert.ToInt32(falseFlag));\nConsole.WriteLine(\"{0} converts to {1}.\", trueFlag,\n                  Convert.ToInt32(trueFlag));\nThe example displays the following output:\n\n       False converts to 0.\n       True converts to 1."}, {"question": "Which of the following is the correct output for the C#.NET code snippet given below?\nConsole.WriteLine(13 / 2 + \" \" + 13 % 2);", "opta": "6.5 1", "optb": "6.5 0", "optc": "6 0", "optd": "6 1", "opte": "6.5 6.5", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about the Bitwise & operator used in C#.NET?\nThe & operator can be used to Invert a bit.\nThe & operator can be used to put ON a bit.\nThe & operator can be used to put OFF a bit.\nThe & operator can be used to check whether a bit is ON.\nThe & operator can be used to check whether a bit is OFF.", "opta": "1, 2, 4", "optb": "2, 3, 5", "optc": "3, 4", "optd": "3, 4, 5", "opte": "None of these", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following are Logical operators in C#.NET?\n&&\n||\n!\nXor\n%", "opta": "1, 2, 3", "optb": "1, 3, 4", "optc": "2, 4, 5", "optd": "3, 4, 5", "opte": "None of these", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Suppose n is a variable of the type Byte and we wish, to check whether its fourth bit (from right) is ON or OFF. Which of the following statements will do this correctly?", "opta": "if ((n&16) == 16)\nConsole.WriteLine(\"Fourth bit is ON\");", "optb": "if ((n&8) == 8)\nConsole.WriteLine(\"Fourth bit is ON\");", "optc": "if ((n ! 8) == 8)\nConsole.WriteLine(\"Fourth bit is ON\");", "optd": "if ((n ^ 8) == 8)\nConsole.WriteLine(\"Fourth bit is ON\");", "opte": "if ((n ~ 8) == 8)\nConsole. WriteLine(\"Fourth bit is ON\");", "ans": "B", "explanation": "byte myByte = 153; // In Binary = 10011001\n\nbyte n = 8; // In Binary = 00001000 \n(Here 1 is the 4th bit from right)\n\nNow perform logical AND operation (n & myByte)\n\n 10011001\n 00001000\n---------\n 00001000  Here result is other than 0, so evaluated to True.\n---------\nIf the result is true, then we can understand that 4th bit is ON of the given data myByte."}, {"question": "What will be the output of the C#.NET code snippet given below? \nint num = 1, z = 5;\n\nif (!(num <= 0))\n    Console.WriteLine( ++num + z++ + \" \" + ++z ); \nelse\n    Console.WriteLine( --num + z-- + \" \" + --z );", "opta": "5 6", "optb": "6 5", "optc": "6 6", "optd": "7 7", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Suppose n is a variable of the type Byte and we wish to put OFF its fourth bit (from right) without disturbing any other bits. Which of the following statements will do this correctly?", "opta": "n = n && HF7", "optb": "n = n & 16", "optc": "n = n & 0xF7", "optd": "n = n & HexF7", "opte": "n = n & 8", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "What will be the output of the C#.NET code snippet given below?\nbyte b1 = 0xAB;\nbyte b2 = 0x99;\nbyte temp;\ntemp = (byte)~b2;\nConsole.Write(temp + \" \");\ntemp = (byte)(b1 << b2);\nConsole.Write (temp + \" \");\ntemp = (byte) (b2 >> 2);\nConsole.WriteLine(temp);", "opta": "102 1 38", "optb": "108 0 32", "optc": "102 0 38", "optd": "1 0 1", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about Bitwise | operator used in C#.NET?", "opta": "The | operator can be used to put OFF a bit.", "optb": "The | operator can be used to Invert a bit.", "optc": "The | operator can be used to check whether a bit is ON.", "optd": "The | operator can be used to check whether a bit is OFF.", "opte": "The | operator can be used to put ON a bit.", "ans": "E", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which  of the  following  is  NOT an Assignment operator in C#.NET?", "opta": "\\=", "optb": "/=", "optc": "*=", "optd": "+=", "opte": "%=", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "What will be the output of the C#.NET code snippet given below?\nint i, j = 1, k;\nfor (i = 0; i < 5; i++)\n{\n    k = j++ + ++j;\n    Console.Write(k + \" \");\n}", "opta": "8 4 16 12 20", "optb": "4 8 12 16 20", "optc": "4 8 16 32 64", "optd": "2 4 6 8 10", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "What will be the output of the C#.NET code snippet given below?\nint a = 10, b = 20, c = 30; \nint res = a < b ? a < c ? c : a : b; \nConsole.WriteLine(res);", "opta": "10", "optb": "20", "optc": "30", "optd": "Compile Error / Syntax Error", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about the following code snippet?\nint a = 10; \nint b = 20;\nbool c;\nc = !(a > b);\nThere is no error in the code snippet.\nAn error will be reported since ! can work only with an int.\nA value 1 will be assigned to c.\nA value True will be assigned to c.\nA value False will be assigned to c.", "opta": "1, 3", "optb": "2, 4", "optc": "4, 5", "optd": "1, 4", "opte": "None of these", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about Bitwise ^ operator used in C#.NET?", "opta": "The ^ operator can be used to put ON a bit.", "optb": "The ^ operator can be used to put OFF a bit.", "optc": "The ^ operator can be used to Invert a bit.", "optd": "The ^ operator can be used to check whether a bit is ON.", "opte": "The ^ operator can be used to check whether a bit is OFF.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct?\nThe conditional operator (?:) returns one of two values depending on the value of a Boolean expression.\nThe as operator in C#.NET is used to perform conversions between compatible reference types.\nThe &* operator is also used to declare pointer types and to dereference pointers.\nThe -> operator combines pointer dereferencing and member access.\nIn addition to being used to specify the order of operations in an expression, brackets [ ] are used to specify casts or type conversions.", "opta": "1, 2, 4", "optb": "2, 3, 5", "optc": "3, 4, 5", "optd": "1, 3, 5", "opte": "None of these", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following unary operators can be overloaded?\ntrue\nfalse\n+\nnew\nis", "opta": "1, 2, 3", "optb": "3, 4, 5", "optc": "3 only", "optd": "5 only", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "A derived class can stop virtual inheritance by declaring an override as", "opta": "inherits", "optb": "extends", "optc": "inheritable", "optd": "not inheritable", "opte": "sealed", "ans": "E", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following keyword is used to change the data and behavior of a base class by replacing a member of a base class with a new derived member?", "opta": "new", "optb": "base", "optc": "overloads", "optd": "override", "opte": "overridable", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct?", "opta": "When used as a modifier, the new keyword explicitly hides a member inherited from a base class.", "optb": "Operator overloading works in different ways for structures and classes.", "optc": "It is not necessary that all operator overloads are static methods of the class.", "optd": "The cast operator can be overloaded.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following keyword is used to overload user-defined types by defining static member functions?", "opta": "op", "optb": "opoverload", "optc": "operator", "optd": "operatoroverload", "opte": "udoperator", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the followings is the correct way to overload + operator?", "opta": "public sample operator + ( sample a, sample b )", "optb": "public abstract operator + ( sample a, sample b)", "optc": "public abstract sample operator + (sample a, sample b )", "optd": "public static sample operator + ( sample a, sample b )", "opte": "All of the above", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct?", "opta": "Static methods can be a virtual method.", "optb": "Abstract methods can be a virtual method.", "optc": "It is necessary to override a virtual method.", "optd": "When overriding a method, the names and type signatures of the override method must be the same as the virtual method that is being overriden.", "opte": "We can override virtual as well as non-virtual methods.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct?\nAll operators in C#.NET can be overloaded.\nWe can use the new modifier to modify a nested type if the nested type is hiding another type.\nIn case of operator overloading all parameters must be of the different type than the class or struct that declares the operator.\nMethod overloading is used to create several methods with the same name that performs similar tasks on similar data types.\nOperator overloading permits the use of symbols to represent computations for a type.", "opta": "1, 3", "optb": "2, 4", "optc": "2, 5", "optd": "3, 4", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct about the C#.NET code snippet given below?\npublic class Sample\n{\n    public int x;\n    public virtual void fun()\n    { }\n}\npublic class DerivedSample : Sample\n{\n    new public void fun()\n    { }\n}", "opta": "DerivedSample class hides the fun() method of base class.", "optb": "The DerivedSample class version of fun() method gets called using Sample class reference which holds DerivedSample class object.", "optc": "The code replaces the DerivedSample class version of fun() method with its Sample class version.", "optd": "It is not possible to hide Sample class version of fun() method without use of new in DerivedSample class.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct?", "opta": "The conditional logical operators cannot be overloaded.", "optb": "When a binary operator is overloaded the corresponding assignment operator, if any, must be explicitly overloaded.", "optc": "We can use the default equality operator in an overloaded implementation of the equality operator.", "optd": "A public or nested public reference type does not overload the equality operator.", "opte": "The array indexing operator can be overloaded.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following operators cannot be overloaded?\ntrue\nfalse\nnew\n~\nsizeof", "opta": "1, 3", "optb": "2, 4", "optc": "3, 5", "optd": "All of the above", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following modifier is used when a virtual method is redefined by a derived class?", "opta": "overloads", "optb": "override", "optc": "overridable", "optd": "virtual", "opte": "base", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "In order for an instance of a derived class to completely take over a class member from a base class, the base class has to declare that member as", "opta": "new", "optb": "base", "optc": "virtual", "optd": "overrides", "opte": "overloads", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following can be declared as a virtual in a class?\nMethods\nProperties\nEvents\nFields\nStatic fields", "opta": "1, 2, 3", "optb": "3, 5", "optc": "2, 4", "optd": "2, 3, 5", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct?", "opta": "Only one object can be created from an abstract class.", "optb": "By default methods are virtual.", "optc": "If a derived class does not provide its own version of virtual method then the one in the base class is used.", "optd": "If the method in the derived class is not preceded by override keywords, the compiler will issue a warning and the method will behave as if the override keyword were present.", "opte": "Each derived class does not have its own version of a virtual method.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following are necessary for Run-time Polymorphism?\nThe overridden base method must be virtual, abstract or override.\nBoth the override method and the virtual method must have the same access level modifier.\nAn override declaration can change the accessibility of the virtual method.\nAn abstract inherited property cannot be overridden in a derived class.\nAn abstract method is implicitly a virtual method.", "opta": "1, 3", "optb": "1, 2, 5", "optc": "2, 3, 4", "optd": "4 only", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "A property can be declared inside a class, struct, Interface.", "opta": "True", "optb": "False", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about properties used in C#.NET?", "opta": "A property can simultaneously be read only or write only.", "optb": "A property can be either read only or write only.", "optc": "A write only property will have only get accessor.", "optd": "A write only property will always return a value.", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "A Student class has a property called rollNo and stu is a reference to a Student object and we want the statement stu.RollNo = 28 to fail. Which of the following options will ensure this functionality?", "opta": "Declare rollNo property with both get and set accessors.", "optb": "Declare rollNo property with only set accessor.", "optc": "Declare rollNo property with get, set and normal accessors.", "optd": "Declare rollNo property with only get accessor.", "opte": "None of the above", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "If a class Student has an indexer, then which of the following is the correct way to declare this indexer to make the C#.NET code snippet given below work successfully?\nStudent s = new Student(); \ns[1, 2] = 35;", "opta": "class Student\n{ \n    int[ ] a = new int[5, 5]; \n    public property WriteOnly int this[int i, int j]\n    { \n        set\n        { \n            a[i, j] = value;\n        } \n    }\n}", "optb": "class Student\n{ \n    int[ , ] a = new int[5, 5]; \n    public int property WriteOnly\n    { \n        set\n        { \n            a[i, j] = value;\n        } \n    } \n}", "optc": "class Student\n{ \n    int[ , ] a = new int[5, 5];\n    public int this[int i, int j] \n    {\n        set\n        { \n            a[i, j] = value;\n        } \n    } \n}", "optd": "class Student\n{ \n    int[ , ] a = new int[5, 5];\n    int i, j; \n    public int this\n    { \n        set\n        { \n            a[i, j] = value;\n        } \n    } \n}", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct?\nThe signature of an indexer consists of the number and types of its formal parameters.\nIndexers are similar to properties except that their accessors take parameters.\nAccessors of interface indexers use modifiers.\nThe type of an indexer and the type of its parameters must be at least as accessible as the indexer itself.\nAn interface accessor contains a body.", "opta": "1, 3, 5", "optb": "1, 2, 4", "optc": "3, 5", "optd": "2, 4", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "If Sample class has a Length property with get and set accessors then which of the following statements will work correctly?\nSample.Length = 20;\nSample m = new Sample(); \nm.Length = 10;\nConsole.WriteLine(Sample.Length);\nSample m = new Sample(); \nint len;\nlen = m.Length;\nSample m = new Sample(); \nm.Length = m.Length + 20;", "opta": "1, 3", "optb": "2, 4, 5", "optc": "4 only", "optd": "3, 5", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is the correct way to implement a write only property Length in a Sample class?", "opta": "class Sample\n{\n    public int Length\n    {\n        set\n        {\n            Length = value;\n        } \n    } \n}", "optb": "class Sample\n{\n    int len;\n    public int Length\n    {\n        get\n        {\n            return len;\n        }\n        set\n        {\n            len = value;\n        } \n    } \n}", "optc": "class Sample\n{\n    int len;\n    public int Length\n    {\n        WriteOnly set\n        {\n            len = value;\n        } \n    } \n}", "optd": "class Sample\n{\n    int len;\n    public int Length\n    {\n        set\n        {\n            len = value;\n        }\n    } \n}", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "A property can be declared inside a namespace or a procedure.", "opta": "True", "optb": "False", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "If a Student class has an indexed property which is used to store or retrieve values to/from an array of 5 integers, then which of the following are the correct ways to use this indexed property?\nStudent[3] = 34;\nStudent s = new Student(); \ns[3] = 34;\nStudent s = new Student(); \nConsole.WriteLine(s[3]);\nConsole.WriteLine(Student[3]);\nStudent.this s = new Student.this(); \ns[3] = 34;", "opta": "1, 2", "optb": "2, 3", "optc": "3, 4", "optd": "3, 5", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "If Sample class has a Length property with set accessor then which of the following statements will work correctly?", "opta": "Sample m = new Sample(); \nint l;\nl = m.Length;", "optb": "Sample m = new Sample(); \nm.Length = m.Length + 20;", "optc": "Sample.Length = 20;", "optd": "Console.WriteLine (Sample.Length);", "opte": "Sample m = new Sample(); \nm.Length = 10;", "ans": "E", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "If Sample class has a Length property with get accessor then which of the following statements will work correctly?", "opta": "Sample m = new Sample(); \nm.Length = 10;", "optb": "Sample m = new Sample(); \nm.Length = m.Length + 20;", "optc": "Sample m = new Sample(); \nint l;\nl = m.Length;", "optd": "Sample.Length = 20;", "opte": "Console.WriteLine(Sample.Length);", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "An Account class has a property called accountNo and acc is a reference to a bank object and we want the C#.NET code snippet given below to work. Which of the following options will ensure this functionality?\nacc.accountNo = 10; \nConsole.WriteLine(acc.accountNo);", "opta": "Declare accountNo property with both get and set accessors.", "optb": "Declare accountNo property with only get accessor.", "optc": "Declare accountNo property with get, set and normal accessors.", "optd": "Declare accountNo property with only set accessor.", "opte": "None of the above", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Suppose a Student class has an indexed property. This property is used to set or retrieve values to/from an array of 5 integers called scores[]. We want the property to report \"Invalid Index\" message if the user attempts to exceed the bounds of the array. Which of the following is the correct way to implement this property?", "opta": "class Student\n{\n    int[] scores = new int[5] {3, 2, 4,1, 5}; \n    public int this[ int index ]\n    { \n        set\n        { \n            if (index < 5)\n                scores[index] = value; \n            else\n                Console.WriteLine(\"Invalid Index\");\n        } \n    } \n}", "optb": "class Student\n{\n    int[] scores = new int[5] {3, 2, 4, 1, 5};\n    public int this[ int index ]\n    { \n        get\n        { \n            if (index < 5)\n                return scores[ index ]; \n            else\n            { \n                Console.WriteLine(\"Invalid Index\"); return 0; \n            } \n        } \n        set\n        { \n            if (index < 5)\n                scores[ index ] = value;\n            else \n                Console.WriteLine(\"Invalid Index\"); \n        } \n    } \n}", "optc": "class Student\n{\n    int[] scores = new int[5] {3, 2, 4, 1, 5}; \n    public int this[ int index ]\n    { \n        get\n        { \n            if (index < 5)\n                return scores[ index ]; \n                else\n                { \n                    Console.WriteLine(\"Invalid Index\"); \n                    return 0; \n                } \n        } \n    } \n}", "optd": "class Student\n{\n    int[] scores = new int[5] {3, 2, 4, 1, 5}; \n    public int this[ int index ]\n    { \n        get\n        {\n            if (index < 5)\n                scores[ index ] = value; \n            else\n            { \n                Console.WriteLine(\"Invalid Index\");\n            } \n        }\n        set\n        { \n            if (index < 5)\n                return scores[ index ];\n            else\n            { \n                Console.WriteLine(\"Invalid Index\");\n                return 0;\n            }\n        }\n    }\n}", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about properties used in C#.NET?", "opta": "Every property must have a set accessor and a get accessor.", "optb": "Properties cannot be overloaded.", "optc": "Properties of a class are actually methods that work like data members.", "optd": "A property has to be either read only or a write only.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is the correct way to implement a read only property Length in a Sample class?", "opta": "class Sample\n{\n    int len;\n    public int Length\n    {\n        get\n        {\n            return len;\n        } \n    } \n}", "optb": "class Sample\n{\n    public int Length\n    {\n        get\n        {\n            return Length;\n        } \n    } \n}", "optc": "class Sample\n{\n    int len;\n    public int Length\n    {\n        get\n        {\n            return len;\n        } \n        set\n        {\n            len = value;\n        } \n    } \n}", "optd": "class Sample\n{\n    int len;\n    public int Length\n    {\n        Readonly get\n        {\n            return len;\n        } \n    } \n}", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the folowing does an indexer allow to index in the same way as an array?\nA class\nA property\nA struct\nA function\nAn interface", "opta": "1, 3, 5", "optb": "2, 4", "optc": "3, 5", "optd": "3, 4, 5", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "An Employee class has a property called age and emp is reference to a Employee object and we want the statement Console.WriteLine(emp.age) to fail. Which of the following options will ensure this functionality?", "opta": "Declare age property with only get accessor.", "optb": "Declare age property with only set accessor.", "optc": "Declare age property with both get and set accessors.", "optd": "Declare age property with get, set and normal accessors.", "opte": "None of the above", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are true about the C#.NET code snippet given below?\nString s1, s2; \ns1 = \"Hi\"; \ns2 = \"Hi\";\nString objects cannot be created without using new.\nOnly one object will get created.\ns1 and s2 both will refer to the same object.\nTwo objects will get created, one pointed to by s1 and another pointed to by s2.\ns1 and s2 are references to the same object.", "opta": "1, 2, 4", "optb": "2, 3, 5", "optc": "3, 4", "optd": "2, 5", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following will be the correct output for the C#.NET code snippet given below?\nString s1 = \"ALL MEN ARE CREATED EQUAL\";\nString s2;\ns2 = s1.Substring(12, 3); \nConsole.WriteLine(s2);", "opta": "ARE", "optb": "CRE", "optc": "CR", "optd": "REA", "opte": "CREATED", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements will correctly copy the contents of one string into another ?", "opta": "String s1 = \"String\";\nString s2; \ns2 = s1;", "optb": "String s1 = \"String\" ; \nString s2;\ns2 = String.Concat(s1, s2);", "optc": "String s1 = \"String\"; \nString s2;\ns2 = String.Copy(s1);", "optd": "String s1 = \"String\"; \nString s2;\ns2 = s1.Replace();", "opte": "String s1 = \"String\"; \nString s2;\ns2 = s2.StringCopy(s1);", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "The string built using the String class are immutable (unchangeable), whereas, the ones built- using the StringBuilder class are mutable.", "opta": "True", "optb": "False", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following will be the correct output for the C#.NET code snippet given below?\nString s1 = \"Nagpur\";\nString s2;\ns2 = s1.Insert(6, \"Mumbai\"); \nConsole.WriteLine(s2);", "opta": "NagpuMumbair", "optb": "Nagpur Mumbai", "optc": "Mumbai", "optd": "Nagpur", "opte": "NagpurMumbai", "ans": "E", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "If s1 and s2 are references to two strings, then which of the following is the correct way to compare the two references?", "opta": "s1 is s2", "optb": "s1 = s2", "optc": "s1 == s2", "optd": "strcmp(s1, s2)", "opte": "s1.Equals(s2)", "ans": "E", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "What will be the output of the C#.NET code snippet given below?\nnamespace IndiabixConsoleApplication\n{\n    class SampleProgram\n    {\n        static void Main(string[ ] args)\n        {\n            string str= \"Hello World!\";\n            Console.WriteLine( String.Compare(str, \"Hello World?\" ).GetType() );\n        }\n    }\n}", "opta": "0", "optb": "1", "optc": "String", "optd": "Hello World?", "opte": "System.Int32", "ans": "E", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following snippets are the correct way to convert a Single into a String?\nSingle f = 9.8f; \nString s;\ns = (String) (f);\nSingle f = 9.8f; \nString s;\ns = Convert.ToString(f);\nSingle f = 9.8f; \nString s;\ns = f.ToString();\nSingle f = 9.8f; \nString s;\ns = Clnt(f);\nSingle f = 9.8f; \nString s;\ns = CString(f);", "opta": "1, 2", "optb": "2, 3", "optc": "1, 3, 5", "optd": "2, 4", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following will be the correct output for the C#.NET code snippet given below?\nString s1=\"Kicit\";\nConsole.Write(s1.IndexOf('c') + \" \"); \nConsole.Write(s1.Length);", "opta": "3 6", "optb": "2 5", "optc": "3 5", "optd": "2 6", "opte": "3 7", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is correct way to convert a String to an int?\nString s = \"123\"; \nint i;\ni = (int)s;\nString s = \"123\";\nint i;\ni = int.Parse(s);\nString s = \"123\"; \nint i;\ni = Int32.Parse(s);\nString s = \"123\"; \nint i;\ni = Convert.ToInt32(s);\nString s = \"123\"; \nint i;\ni = CInt(s);", "opta": "1, 3, 5", "optb": "2, 4", "optc": "3, 5", "optd": "2, 3, 4", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements about a String is correct?", "opta": "A String is created on the stack.", "optb": "Whether a String is created on the stack or the heap depends on the length of the String.", "optc": "A String is a primitive.", "optd": "A String can be created by using the statement String s1 = new String;", "opte": "A String is created on the heap.", "ans": "E", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct about a String in C#.NET?", "opta": "A String is mutable because it can be modified once it has been created.", "optb": "Methods of the String class can be used to modify the string.", "optc": "A number CANNOT be represented in the form of a String.", "optd": "A String has a zero-based index.", "opte": "The System.Array class is used to represent a string.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following will be the correct output for the C#.NET code snippet given below?\nString s1 = \"Five Star\";\nString s2 = \"FIVE STAR\";\nint c;\nc = s1.CompareTo(s2);\nConsole.WriteLine(c);", "opta": "0", "optb": "1", "optc": "2", "optd": "-1", "opte": "-2", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "If s1 and s2 are references to two strings then which of the following are the correct ways to find whether the contents of the two strings are equal?\nif(s1 = s2)\nif(s1 == s2)\nint c;\nc = s1.CompareTo(s2);\nif( strcmp(s1, s2) )\nif (s1 is s2)", "opta": "1, 2", "optb": "2, 3", "optc": "4, 5", "optd": "3, 5", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the   following statements are correct about the String Class in C#.NET?\nTwo strings can be concatenated by using an expression of the form s3 = s1 + s2;\nString is a primitive in C#.NET.\nA string built using StringBuilder Class is Mutable.\nA string built using String Class is Immutable.\nTwo strings can be concatenated by using an expression of the form s3 = s1&s2;", "opta": "1, 2, 5", "optb": "2, 4", "optc": "1, 3, 4", "optd": "3, 5", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct?\nString is a value type.\nString literals can contain any character literal including escape sequences.\nThe equality operators are defined to compare the values of string objects as well as references.\nAttempting to access a character that is outside the bounds of the string results in an IndexOutOfRangeException.\nThe contents of a string object can be changed after the object is created.", "opta": "1, 3", "optb": "3, 5", "optc": "2, 4", "optd": "1, 2, 4", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is the correct way to find out the index of the second 's' in the string \"She sells sea shells on the sea-shore\"?", "opta": "String str = \"She sells sea shells on the sea-shore\"; \nint i;\ni = str.SecondIndexOf(\"s\");", "optb": "String str = \"She sells sea shells on the sea-shore\"; \nint i, j;\ni = str.FirstIndexOf(\"s\"); \nj = str.IndexOf(\"s\", i + 1);", "optc": "String str = \"She sells sea shells on the sea-shore\"; \nint i, j;\ni = str.IndexOf(\"s\"); \nj = str.IndexOf(\"s\", i + 1);", "optd": "String str = \"She sells sea shells on the sea-shore\"; \nint i, j;\ni = str.LastIndexOf(\"s\"); \nj = str.IndexOf(\"s\", i - 1);", "opte": "String str = \"She sells sea shells on the sea-shore\"; \nint i, j;\ni = str.IndexOf(\"S\"); \nj = str.IndexOf(\"s\", i);", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "The space required for structure variables is allocated on stack.", "opta": "True", "optb": "False", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Creating empty structures is allowed in C#.NET.", "opta": "True", "optb": "False", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following will be the correct output for the C#.NET program given below?\nnamespace IndiabixConsoleApplication\n{ \n    struct Sample\n    {\n        public int i;\n    }\n    class MyProgram\n    { \n        static void Main()\n        {\n            Sample x = new Sample(); \n            x.i = 10; \n            fun(x); \n            Console.Write(x.i + \" \");\n        }\n        static void fun(Sample y)\n        {\n            y.i = 20; \n            Console.Write(y.i + \" \");\n        } \n    } \n}", "opta": "10 20", "optb": "10 10", "optc": "20 10", "optd": "20 20", "opte": "None of the above", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is the correct way of setting values into the structure variable e defined below?\nstruct Emp\n{\n    public String name;\n    public int age;\n    public Single sal; \n}\nEmp e = new Emp();", "opta": "e.name = \"Amol\"; \ne.age = 25; \ne.sal = 5500;", "optb": "With e\n{\n    .name = \"Amol\";\n    .age = 25;\n    .sal = 5500; \n}", "optc": "With emp e\n{\n    .name = \"Amol\";\n    .age = 25;\n    .sal = 5500; \n}", "optd": "e -> name = \"Amol\"; \ne -> age = 25;\ne -> sal = 5500;", "opte": "name = \"Amol\"; \nage = 25;\nsal = 5500;", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is the correct way to define a variable of the type struct Emp declared below?\nstruct Emp\n{\n    private String name; \n    private int age; \n    private Single sal;\n}\nEmp e(); e = new Emp();\nEmp e = new Emp;\nEmp e; e = new Emp;\nEmp e = new Emp();\nEmp e;", "opta": "1, 3", "optb": "2, 5", "optc": "4, 5", "optd": "1, 2, 4", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about the C#.NET code snippet given below?\nclass Trial\n{ \n    int i;\n    Decimal d;\n}\nstruct Sample\n{\n    private int x;\n    private Single y;\n    private Trial z;\n}\nSample ss = new Sample();", "opta": "ss will be created on the heap.", "optb": "Trial object referred by z will be created on the stack.", "optc": "z will be created on the heap.", "optd": "Both ss and z will be created on the heap.", "opte": "ss will be created on the stack.", "ans": "E", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "How many bytes will the structure variable samp occupy in memory if it is defined as shown below?\nclass Trial\n{ \n    int i; \n    Decimal d;\n}\nstruct Sample\n{\n    private int x; \n    private Single y; \n    private Trial z;\n}\nSample samp = new Sample();", "opta": "20 bytes", "optb": "12 bytes", "optc": "8 bytes", "optd": "16 bytes", "opte": "24 bytes", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following will be the correct result of the statement b = a in the C#.NET code snippet given below?\nstruct Address\n{\n    private int plotno;\n    private String city; \n}\nAddress a = new Address(); \nAddress b; \nb = a;", "opta": "All elements of a will get copied into corresponding elements of b.", "optb": "Address stored in a will get copied into b.", "optc": "Once assignment is over a will get garbage collected.", "optd": "Once assignment is over a will go out of scope, hence will die.", "opte": "Address of the first element of a will get copied into b.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct?\nA struct can contain properties.\nA struct can contain constructors.\nA struct can contain protected data members.\nA struct cannot contain methods.\nA struct cannot contain constants.", "opta": "1, 2", "optb": "3, 4", "optc": "1, 2, 4", "optd": "3, 5", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "C#.NET structures are always value types.", "opta": "True", "optb": "False", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "When would a structure variable get destroyed?", "opta": "When no reference refers to it, it will get garbage collected.", "optb": "Depends upon whether it is created using new or without using new.", "optc": "When it goes out of scope.", "optd": "Depends   upon   the   Project   Settings   made   in   Visual Studio.NET.", "opte": "Depends upon whether we free it's memory using free() or delete().", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about the C#.NET code snippet given below?\nstruct Book\n{\n    private String name; \n    private int noofpages; \n    private Single price;\n}\nBook b = new Book();", "opta": "The structure variable b will be created on the heap.", "optb": "We  can add a zero-argument constructor to the above structure.", "optc": "When the program terminates, variable b will get garbage collected.", "optd": "The structure variable b will be created on the stack.", "opte": "We can inherit a new structure from struct Book.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following will be the correct output for the C#.NET program given below?\nnamespace IndiabixConsoleApplication\n{ \n    struct Sample\n    { \n        public int i;\n    }\n    class MyProgram\n    { \n        static void Main(string[] args)\n        {\n            Sample x = new Sample(); \n            x.i = 10; \n            fun(ref x); \n            Console.Write(x.i + \" \");\n        }\n        public static void fun(ref Sample y)\n        { \n            y.i = 20;\n            Console.Write(y.i + \" \"); \n        } \n    } \n}", "opta": "20 10", "optb": "10 20", "optc": "10 10", "optd": "20 20", "opte": "None of the above", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct?", "opta": "A struct never declares a default constructor.", "optb": "All value types in C# inherently derive from ValueType, which inherits from Object.", "optc": "A struct never declares a default destructor.", "optd": "In C#, classes and structs are semantically same.", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about the structure declaration given below?\nstruct Book\n{\n    private String name; \n    protected int totalpages; \n    public Single price; \n    public void Showdata()\n    {\n        Console.WriteLine(name + \" \" + totalpages + \" \" + price);\n    } \n    Book()\n    {\n        name = \" \"; \n        totalpages = 0;\n        price = 0.0f; \n    } \n} \nBook b = new Book();\nWe cannot declare the access modifier of totalpages as protected.\nWe cannot declare the access modifier of name as private.\nWe  cannot define  a zero-argument constructor inside  a structure.\nWe cannot declare the access modifier of price as public.\nWe can define a Showdata() method inside a structure.", "opta": "1, 2", "optb": "1, 3, 5", "optc": "2, 4", "optd": "3, 4, 5", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following are true about classes and struct?\nA class is a reference type, whereas a struct is a value type.\nObjects are created using new, whereas structure variables can be created either using new or without using new.\nA structure variable will always be created slower than an object.\nA structure variable will die when it goes out of scope.\nAn object will die when it goes out of scope.", "opta": "1, 2, 4", "optb": "3, 5", "optc": "2, 4", "optd": "3, 4, 5", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following will be the correct output for the program given below?\nnamespace IndiabixConsoleApplication\n{ \n    struct Sample\n    {\n        public int i;\n    }\n    class MyProgram\n    { \n        static void Main(string[] args)\n        {\n            Sample x = new Sample();\n            Sample y;\n            x.i = 9;\n            y = x;\n            y.i = 5;\n            Console.WriteLine(x.i + \" \" + y.i); \n        } \n    } \n}", "opta": "9 9", "optb": "9 5", "optc": "5 5", "optd": "5 9", "opte": "None of the above", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about Structures used in C#.NET?\nA Structure can be declared within a procedure.\nStructs can implement an interface but they cannot inherit from another struct.\nstruct members cannot be declared as protected.\nA Structure can be empty.\nIt is an error to initialize an instance field in a struct.", "opta": "1, 2, 4", "optb": "2, 3, 5", "optc": "2, 4", "optd": "1, 3", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}]]}