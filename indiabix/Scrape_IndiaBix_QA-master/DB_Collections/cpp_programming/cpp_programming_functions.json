{"test_questions": [[{"question": "Which of the following function prototype is perfectly acceptable?", "opta": "int Function(int Tmp = Show());", "optb": "float Function(int Tmp = Show(int, float));", "optc": "Both A and B.", "optd": "float = Show(int, float) Function(Tmp);", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "C++ enables to define functions that take constants as an argument.", "optb": "We cannot change the argument of the function that that are declared as constant.", "optc": "Both A and B.", "optd": "We cannot use the constant while defining the function.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "Overloaded functions can have at most one default argument.", "optb": "An overloaded function cannot have default argument.", "optc": "All arguments of an overloaded function can be default.", "optd": "A function if overloaded more than once cannot have default argument.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "Two functions having same number of argument, order and type of argument can be overloaded if both functions do not have any default argument.", "optb": "Overloaded function must have default arguments.", "optc": "Overloaded function must have default arguments starting from the left of argument list.", "optd": "A function can be overloaded more than once.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement will be correct if the function has three arguments passed to it?", "opta": "The trailing argument will be the default argument.", "optb": "The first argument will be the default argument.", "optc": "The middle argument will be the default argument.", "optd": "All the argument will be the default argument.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is incorrect?", "opta": "Default arguments can be provided for pointers to functions.", "optb": "A function can have all its arguments as default.", "optc": "Default argument cannot be provided for pointers to functions.", "optd": "A default argument cannot be redefined in later declaration.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "Constructors can have default parameters.", "optb": "Constructors cannot have default parameters.", "optc": "Constructors cannot have more than one default parameter.", "optd": "Constructors can have at most five default parameters.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following function / type of function cannot be overloaded?", "opta": "Member function", "optb": "Static function", "optc": "Virtual function", "optd": "Both B and C", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following function declaration is/are incorrect?", "opta": "int Sum(int a, int b = 2, int c = 3);", "optb": "int Sum(int a = 5, int b);", "optc": "int Sum(int a = 0, int b, int c = 3);", "optd": "Both B and C are incorrect.", "opte": "All are correct.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is incorrect?", "opta": "The default value for an argument can be a global constant.", "optb": "The default arguments are given in the function prototype.", "optc": "Compiler uses the prototype information to build a call, not the function definition.", "optd": "The default arguments are given in the function prototype and should be repeated in the function definition.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Where the default value of parameter have to be specified?", "opta": "Function call", "optb": "Function definition", "optc": "Function prototype", "optd": "Both B or C", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "The default value for an argument cannot be function call.", "optb": "C++ allows the redefinition of a default parameter.", "optc": "Both A and B.", "optd": "C++ does not allow the redefinition of a default parameter.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "Only one parameter of a function can be a default parameter.", "optb": "Minimum one parameter of a function must be a default parameter.", "optc": "All the parameters of a function can be default parameters.", "optd": "No parameter of a function can be default.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is incorrect?", "opta": "A default argument is checked for type at the time of declaration and evaluated at the time of call.", "optb": "We can provide a default value to a particular argument in the middle of an argument list.", "optc": "We cannot provide a default value to a particular argument in the middle of an argument list.", "optd": "Default arguments are useful in situations where some arguments always have the same value.", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "Overloaded functions can accept same number of arguments.", "optb": "Overloaded functions always return value of same data type.", "optc": "Overloaded functions can accept only same number and same type of arguments.", "optd": "Overloaded functions can accept only different number and different type of arguments.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following function / types of function cannot have default parameters?", "opta": "Member function of class", "optb": "main()", "optc": "Member function of structure", "optd": "Both B and C", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "The order of the default argument will be right to left.", "optb": "The order of the default argument will be left to right.", "optc": "The order of the default argument will be alternate.", "optd": "The order of the default argument will be random.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following function prototype is perfectly acceptable?", "opta": "int Function(int Tmp = Show());", "optb": "float Function(int Tmp = Show(int, float));", "optc": "Both A and B.", "optd": "float = Show(int, float) Function(Tmp);", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "C++ enables to define functions that take constants as an argument.", "optb": "We cannot change the argument of the function that that are declared as constant.", "optc": "Both A and B.", "optd": "We cannot use the constant while defining the function.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "Overloaded functions can have at most one default argument.", "optb": "An overloaded function cannot have default argument.", "optc": "All arguments of an overloaded function can be default.", "optd": "A function if overloaded more than once cannot have default argument.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "Two functions having same number of argument, order and type of argument can be overloaded if both functions do not have any default argument.", "optb": "Overloaded function must have default arguments.", "optc": "Overloaded function must have default arguments starting from the left of argument list.", "optd": "A function can be overloaded more than once.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement will be correct if the function has three arguments passed to it?", "opta": "The trailing argument will be the default argument.", "optb": "The first argument will be the default argument.", "optc": "The middle argument will be the default argument.", "optd": "All the argument will be the default argument.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is incorrect?", "opta": "Default arguments can be provided for pointers to functions.", "optb": "A function can have all its arguments as default.", "optc": "Default argument cannot be provided for pointers to functions.", "optd": "A default argument cannot be redefined in later declaration.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "Constructors can have default parameters.", "optb": "Constructors cannot have default parameters.", "optc": "Constructors cannot have more than one default parameter.", "optd": "Constructors can have at most five default parameters.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following function / type of function cannot be overloaded?", "opta": "Member function", "optb": "Static function", "optc": "Virtual function", "optd": "Both B and C", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following function declaration is/are incorrect?", "opta": "int Sum(int a, int b = 2, int c = 3);", "optb": "int Sum(int a = 5, int b);", "optc": "int Sum(int a = 0, int b, int c = 3);", "optd": "Both B and C are incorrect.", "opte": "All are correct.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is incorrect?", "opta": "The default value for an argument can be a global constant.", "optb": "The default arguments are given in the function prototype.", "optc": "Compiler uses the prototype information to build a call, not the function definition.", "optd": "The default arguments are given in the function prototype and should be repeated in the function definition.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Where the default value of parameter have to be specified?", "opta": "Function call", "optb": "Function definition", "optc": "Function prototype", "optd": "Both B or C", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "The default value for an argument cannot be function call.", "optb": "C++ allows the redefinition of a default parameter.", "optc": "Both A and B.", "optd": "C++ does not allow the redefinition of a default parameter.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "Only one parameter of a function can be a default parameter.", "optb": "Minimum one parameter of a function must be a default parameter.", "optc": "All the parameters of a function can be default parameters.", "optd": "No parameter of a function can be default.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is incorrect?", "opta": "A default argument is checked for type at the time of declaration and evaluated at the time of call.", "optb": "We can provide a default value to a particular argument in the middle of an argument list.", "optc": "We cannot provide a default value to a particular argument in the middle of an argument list.", "optd": "Default arguments are useful in situations where some arguments always have the same value.", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "Overloaded functions can accept same number of arguments.", "optb": "Overloaded functions always return value of same data type.", "optc": "Overloaded functions can accept only same number and same type of arguments.", "optd": "Overloaded functions can accept only different number and different type of arguments.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following function / types of function cannot have default parameters?", "opta": "Member function of class", "optb": "main()", "optc": "Member function of structure", "optd": "Both B and C", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "The order of the default argument will be right to left.", "optb": "The order of the default argument will be left to right.", "optc": "The order of the default argument will be alternate.", "optd": "The order of the default argument will be random.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following function prototype is perfectly acceptable?", "opta": "int Function(int Tmp = Show());", "optb": "float Function(int Tmp = Show(int, float));", "optc": "Both A and B.", "optd": "float = Show(int, float) Function(Tmp);", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "C++ enables to define functions that take constants as an argument.", "optb": "We cannot change the argument of the function that that are declared as constant.", "optc": "Both A and B.", "optd": "We cannot use the constant while defining the function.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "Overloaded functions can have at most one default argument.", "optb": "An overloaded function cannot have default argument.", "optc": "All arguments of an overloaded function can be default.", "optd": "A function if overloaded more than once cannot have default argument.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "Two functions having same number of argument, order and type of argument can be overloaded if both functions do not have any default argument.", "optb": "Overloaded function must have default arguments.", "optc": "Overloaded function must have default arguments starting from the left of argument list.", "optd": "A function can be overloaded more than once.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement will be correct if the function has three arguments passed to it?", "opta": "The trailing argument will be the default argument.", "optb": "The first argument will be the default argument.", "optc": "The middle argument will be the default argument.", "optd": "All the argument will be the default argument.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is incorrect?", "opta": "Default arguments can be provided for pointers to functions.", "optb": "A function can have all its arguments as default.", "optc": "Default argument cannot be provided for pointers to functions.", "optd": "A default argument cannot be redefined in later declaration.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "Constructors can have default parameters.", "optb": "Constructors cannot have default parameters.", "optc": "Constructors cannot have more than one default parameter.", "optd": "Constructors can have at most five default parameters.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following function / type of function cannot be overloaded?", "opta": "Member function", "optb": "Static function", "optc": "Virtual function", "optd": "Both B and C", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following function declaration is/are incorrect?", "opta": "int Sum(int a, int b = 2, int c = 3);", "optb": "int Sum(int a = 5, int b);", "optc": "int Sum(int a = 0, int b, int c = 3);", "optd": "Both B and C are incorrect.", "opte": "All are correct.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is incorrect?", "opta": "The default value for an argument can be a global constant.", "optb": "The default arguments are given in the function prototype.", "optc": "Compiler uses the prototype information to build a call, not the function definition.", "optd": "The default arguments are given in the function prototype and should be repeated in the function definition.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Where the default value of parameter have to be specified?", "opta": "Function call", "optb": "Function definition", "optc": "Function prototype", "optd": "Both B or C", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "The default value for an argument cannot be function call.", "optb": "C++ allows the redefinition of a default parameter.", "optc": "Both A and B.", "optd": "C++ does not allow the redefinition of a default parameter.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "Only one parameter of a function can be a default parameter.", "optb": "Minimum one parameter of a function must be a default parameter.", "optc": "All the parameters of a function can be default parameters.", "optd": "No parameter of a function can be default.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is incorrect?", "opta": "A default argument is checked for type at the time of declaration and evaluated at the time of call.", "optb": "We can provide a default value to a particular argument in the middle of an argument list.", "optc": "We cannot provide a default value to a particular argument in the middle of an argument list.", "optd": "Default arguments are useful in situations where some arguments always have the same value.", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "Overloaded functions can accept same number of arguments.", "optb": "Overloaded functions always return value of same data type.", "optc": "Overloaded functions can accept only same number and same type of arguments.", "optd": "Overloaded functions can accept only different number and different type of arguments.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following function / types of function cannot have default parameters?", "opta": "Member function of class", "optb": "main()", "optc": "Member function of structure", "optd": "Both B and C", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "The order of the default argument will be right to left.", "optb": "The order of the default argument will be left to right.", "optc": "The order of the default argument will be alternate.", "optd": "The order of the default argument will be random.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following function prototype is perfectly acceptable?", "opta": "int Function(int Tmp = Show());", "optb": "float Function(int Tmp = Show(int, float));", "optc": "Both A and B.", "optd": "float = Show(int, float) Function(Tmp);", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "C++ enables to define functions that take constants as an argument.", "optb": "We cannot change the argument of the function that that are declared as constant.", "optc": "Both A and B.", "optd": "We cannot use the constant while defining the function.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "Overloaded functions can have at most one default argument.", "optb": "An overloaded function cannot have default argument.", "optc": "All arguments of an overloaded function can be default.", "optd": "A function if overloaded more than once cannot have default argument.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "Two functions having same number of argument, order and type of argument can be overloaded if both functions do not have any default argument.", "optb": "Overloaded function must have default arguments.", "optc": "Overloaded function must have default arguments starting from the left of argument list.", "optd": "A function can be overloaded more than once.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement will be correct if the function has three arguments passed to it?", "opta": "The trailing argument will be the default argument.", "optb": "The first argument will be the default argument.", "optc": "The middle argument will be the default argument.", "optd": "All the argument will be the default argument.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is incorrect?", "opta": "Default arguments can be provided for pointers to functions.", "optb": "A function can have all its arguments as default.", "optc": "Default argument cannot be provided for pointers to functions.", "optd": "A default argument cannot be redefined in later declaration.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "Constructors can have default parameters.", "optb": "Constructors cannot have default parameters.", "optc": "Constructors cannot have more than one default parameter.", "optd": "Constructors can have at most five default parameters.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following function / type of function cannot be overloaded?", "opta": "Member function", "optb": "Static function", "optc": "Virtual function", "optd": "Both B and C", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following function declaration is/are incorrect?", "opta": "int Sum(int a, int b = 2, int c = 3);", "optb": "int Sum(int a = 5, int b);", "optc": "int Sum(int a = 0, int b, int c = 3);", "optd": "Both B and C are incorrect.", "opte": "All are correct.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is incorrect?", "opta": "The default value for an argument can be a global constant.", "optb": "The default arguments are given in the function prototype.", "optc": "Compiler uses the prototype information to build a call, not the function definition.", "optd": "The default arguments are given in the function prototype and should be repeated in the function definition.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Where the default value of parameter have to be specified?", "opta": "Function call", "optb": "Function definition", "optc": "Function prototype", "optd": "Both B or C", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "The default value for an argument cannot be function call.", "optb": "C++ allows the redefinition of a default parameter.", "optc": "Both A and B.", "optd": "C++ does not allow the redefinition of a default parameter.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "Only one parameter of a function can be a default parameter.", "optb": "Minimum one parameter of a function must be a default parameter.", "optc": "All the parameters of a function can be default parameters.", "optd": "No parameter of a function can be default.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is incorrect?", "opta": "A default argument is checked for type at the time of declaration and evaluated at the time of call.", "optb": "We can provide a default value to a particular argument in the middle of an argument list.", "optc": "We cannot provide a default value to a particular argument in the middle of an argument list.", "optd": "Default arguments are useful in situations where some arguments always have the same value.", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "Overloaded functions can accept same number of arguments.", "optb": "Overloaded functions always return value of same data type.", "optc": "Overloaded functions can accept only same number and same type of arguments.", "optd": "Overloaded functions can accept only different number and different type of arguments.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following function / types of function cannot have default parameters?", "opta": "Member function of class", "optb": "main()", "optc": "Member function of structure", "optd": "Both B and C", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "The order of the default argument will be right to left.", "optb": "The order of the default argument will be left to right.", "optc": "The order of the default argument will be alternate.", "optd": "The order of the default argument will be random.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following function prototype is perfectly acceptable?", "opta": "int Function(int Tmp = Show());", "optb": "float Function(int Tmp = Show(int, float));", "optc": "Both A and B.", "optd": "float = Show(int, float) Function(Tmp);", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "C++ enables to define functions that take constants as an argument.", "optb": "We cannot change the argument of the function that that are declared as constant.", "optc": "Both A and B.", "optd": "We cannot use the constant while defining the function.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "Overloaded functions can have at most one default argument.", "optb": "An overloaded function cannot have default argument.", "optc": "All arguments of an overloaded function can be default.", "optd": "A function if overloaded more than once cannot have default argument.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "Two functions having same number of argument, order and type of argument can be overloaded if both functions do not have any default argument.", "optb": "Overloaded function must have default arguments.", "optc": "Overloaded function must have default arguments starting from the left of argument list.", "optd": "A function can be overloaded more than once.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement will be correct if the function has three arguments passed to it?", "opta": "The trailing argument will be the default argument.", "optb": "The first argument will be the default argument.", "optc": "The middle argument will be the default argument.", "optd": "All the argument will be the default argument.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is incorrect?", "opta": "Default arguments can be provided for pointers to functions.", "optb": "A function can have all its arguments as default.", "optc": "Default argument cannot be provided for pointers to functions.", "optd": "A default argument cannot be redefined in later declaration.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "Constructors can have default parameters.", "optb": "Constructors cannot have default parameters.", "optc": "Constructors cannot have more than one default parameter.", "optd": "Constructors can have at most five default parameters.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following function / type of function cannot be overloaded?", "opta": "Member function", "optb": "Static function", "optc": "Virtual function", "optd": "Both B and C", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following function declaration is/are incorrect?", "opta": "int Sum(int a, int b = 2, int c = 3);", "optb": "int Sum(int a = 5, int b);", "optc": "int Sum(int a = 0, int b, int c = 3);", "optd": "Both B and C are incorrect.", "opte": "All are correct.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is incorrect?", "opta": "The default value for an argument can be a global constant.", "optb": "The default arguments are given in the function prototype.", "optc": "Compiler uses the prototype information to build a call, not the function definition.", "optd": "The default arguments are given in the function prototype and should be repeated in the function definition.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Where the default value of parameter have to be specified?", "opta": "Function call", "optb": "Function definition", "optc": "Function prototype", "optd": "Both B or C", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "The default value for an argument cannot be function call.", "optb": "C++ allows the redefinition of a default parameter.", "optc": "Both A and B.", "optd": "C++ does not allow the redefinition of a default parameter.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "Only one parameter of a function can be a default parameter.", "optb": "Minimum one parameter of a function must be a default parameter.", "optc": "All the parameters of a function can be default parameters.", "optd": "No parameter of a function can be default.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is incorrect?", "opta": "A default argument is checked for type at the time of declaration and evaluated at the time of call.", "optb": "We can provide a default value to a particular argument in the middle of an argument list.", "optc": "We cannot provide a default value to a particular argument in the middle of an argument list.", "optd": "Default arguments are useful in situations where some arguments always have the same value.", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "Overloaded functions can accept same number of arguments.", "optb": "Overloaded functions always return value of same data type.", "optc": "Overloaded functions can accept only same number and same type of arguments.", "optd": "Overloaded functions can accept only different number and different type of arguments.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following function / types of function cannot have default parameters?", "opta": "Member function of class", "optb": "main()", "optc": "Member function of structure", "optd": "Both B and C", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct?", "opta": "The order of the default argument will be right to left.", "optb": "The order of the default argument will be left to right.", "optc": "The order of the default argument will be alternate.", "optd": "The order of the default argument will be random.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}]]}