{"test_questions": [[{"question": "What will the function rewind() do?", "opta": "Reposition the file pointer to a character reverse.", "optb": "Reposition the file pointer stream to end of file.", "optc": "Reposition the file pointer to begining of that line.", "optd": "Reposition the file pointer to begining of file.", "ans": "D", "explanation": "rewind() takes the file pointer to the beginning of the file. so that the next I/O operation will take place at the beginning of the file.\n                Example: rewind(FilePointer);"}, {"question": "Input/output function prototypes and macros are defined in which header file?", "opta": "conio.h", "optb": "stdlib.h", "optc": "stdio.h", "optd": "dos.h", "ans": "C", "explanation": "stdio.h, which stands for \"standard input/output header\", is the header in the C standard library that contains macro definitions, constants, and declarations of functions and types used for various standard input and output operations."}, {"question": "Which standard library function will you use to find the last occurance of a character in a string in C?", "opta": "strnchar()", "optb": "strchar()", "optc": "strrchar()", "optd": "strrchr()", "ans": "D", "explanation": "strrchr() returns a pointer to the last occurrence of character in a string.\nExample:\n\r\n#include <stdio.h>\r\n#include <string.h>\r\n\r\nint main()\r\n{\r\n    char str[30] = \"12345678910111213\";\r\n    printf(\"The last position of '2' is %d.\\n\",\r\n            strrchr(str, '2') - str);\r\n    return 0;\r\n}\r\n\nOutput: The last position of '2' is 14."}, {"question": "What is stderr ?", "opta": "standard error", "optb": "standard error types", "optc": "standard error streams", "optd": "standard error definitions", "ans": "C", "explanation": "The standard error(stderr) stream is the default destination for error messages and other diagnostic warnings. Like stdout, it is usually also directed to the output device of the standard console (generally, the screen)."}, {"question": "Does there any function exist to convert the int or float to a string?", "opta": "Yes", "optb": "No", "ans": "A", "explanation": "1. itoa() converts an integer to a string.\n2. ltoa() converts a long to a string.\n3. ultoa() converts an unsigned long to a string.\n4. sprintf() sends formatted output to a string, so it can be used to convert any type of values to string type.\n#include<stdio.h>\n#include<stdlib.h>\n\nint main(void)\n{\n   int   num1 = 12345;\n   float num2 = 5.12;\n   char str1[20];\n   char str2[20];\n\n   itoa(num1, str1, 10); /* 10 radix value */\n   printf(\"integer = %d string = %s \\n\", num1, str1);\n\n   sprintf(str2, \"%f\", num2);\n   printf(\"float = %f string = %s\", num2, str2);\n\n   return 0;\n}\n\n// Output:\n// integer = 12345 string = 12345\n// float = 5.120000 string = 5.120000"}, {"question": "What is the purpose of fflush() function.", "opta": "flushes all streams and specified streams.", "optb": "flushes only specified stream.", "optc": "flushes input/output buffer.", "optd": "flushes file buffer.", "ans": "A", "explanation": "\"fflush()\" flush any buffered output associated with filename, which is either a file opened for writing or a shell command for redirecting output to a pipe or coprocess.\nExample: fflush(FilePointer);\nfflush(NULL); flushes all streams."}, {"question": "Can you use the fprintf() to display the output on the screen?", "opta": "Yes", "optb": "No", "ans": "A", "explanation": "Do like this fprintf(stdout, \"%s %d %f\", str, i, a);"}, {"question": "What will the function randomize() do in Turbo C under DOS?", "opta": "returns a random number.", "optb": "returns a random number generator in the specified range.", "optc": "returns a random number generator with a random value based on time.", "optd": "return a random number with a given seed value.", "ans": "C", "explanation": "The randomize() function initializes the random number generator with a random value based on time. You can try the sample program given below in Turbo-C, it may not work as expected in other compilers.\n/* Prints a random number in the range 0 to 99 */\n\n#include <stdlib.h>\n#include <stdio.h>\n#include <time.h>\n\nint main(void)\n{\n    randomize();\n    printf(\"Random number in the 0-99 range: %d\\n\", random (100));\n    return 0;\n}"}]]}