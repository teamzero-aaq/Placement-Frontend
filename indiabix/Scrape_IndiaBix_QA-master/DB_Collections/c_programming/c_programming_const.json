{"test_questions": [[{"question": "What will be the output of the program?\n#include<stdio.h>\n\nint main()\n{\n    int y=128;\n    const int x=y;\n    printf(\"%d\\n\", x);\n    return 0;\n}", "opta": "128", "optb": "Garbage value", "optc": "Error", "optd": "0", "ans": "A", "explanation": "Step 1: int y=128; The variable 'y' is declared as an integer type and initialized to value \"128\".\n\n\nStep 2: const int x=y; The constant variable 'x' is declared as an integer and it is initialized with the variable 'y' value.\n\n\nStep 3: printf(\"%d\\n\", x); It prints the value of variable 'x'.\n\nHence the output of the program is \"128\""}, {"question": "What will be the output of the program?\n#include<stdio.h>\n#include<stdlib.h>\n\nunion employee\n{\n    char name[15];\n    int age;\n    float salary;\n};\nconst union employee e1;\n\nint main()\n{\n    strcpy(e1.name, \"K\");\n    printf(\"%s %d %f\", e1.name, e1.age, e1.salary);\n    return 0;\n}", "opta": "Error: RValue required", "optb": "Error: cannot convert from 'const int *' to 'int *const'", "optc": "Error: LValue required in strcpy", "optd": "No error", "ans": "D", "explanation": "The output will be (in 16-bit platform DOS):\nK 75 0.000000"}, {"question": "What will be the output of the program?\n#include<stdio.h>\nint fun(int **ptr);\n\nint main()\n{\n    int i=10;\n    const int *ptr = &i;\n    fun(&ptr);\n    return 0;\n}\nint fun(int **ptr)\n{\n    int j = 223;\n    int *temp = &j;\n    printf(\"Before changing ptr = %5x\\n\", *ptr);\n    const *ptr = temp;\n    printf(\"After changing ptr = %5x\\n\", *ptr);\n    return 0;\n}", "opta": "Address of iAddress of j", "optb": "10223", "optc": "Error: cannot convert parameter 1 from 'const int **' to 'int **'", "optd": "Garbage value", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "What will be the output of the program?\n#include<stdio.h>\n\nint main()\n{\n    const int x=5;\n    const int *ptrx;\n    ptrx = &x;\n    *ptrx = 10;\n    printf(\"%d\\n\", x);\n    return 0;\n}", "opta": "5", "optb": "10", "optc": "Error", "optd": "Garbage value", "ans": "C", "explanation": "Step 1: const int x=5; The constant variable x is declared as an integer data type and initialized with value '5'.\r\n\n\nStep 2: const int *ptrx; The constant variable ptrx is declared as an integer pointer.\r\n\n\nStep 3: ptrx = &x; The address of the constant variable x is assigned to integer pointer variable ptrx.\r\n\n\nStep 4: *ptrx = 10; Here we are indirectly trying to change the value of the constant vaiable x. This will result in an error.\r\n\nTo change the value of const variable x we have to use *(int *)&x = 10;"}, {"question": "What will be the output of the program in TurboC?\n#include<stdio.h>\nint fun(int **ptr);\n\nint main()\n{\n    int i=10, j=20;\n    const int *ptr = &i;\n    printf(\" i = %5X\", ptr);\n    printf(\" ptr = %d\", *ptr);\n    ptr = &j;\n    printf(\" j = %5X\", ptr);\n    printf(\" ptr = %d\", *ptr);\n    return 0;\n}", "opta": "i= FFE2 ptr=12 j=FFE4 ptr=24", "optb": "i= FFE4 ptr=10 j=FFE2 ptr=20", "optc": "i= FFE0 ptr=20 j=FFE1 ptr=30", "optd": "Garbage value", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "What will be the output of the program?\n#include<stdio.h>\n\nint main()\n{\n    const char *s = \"\";\n    char str[] = \"Hello\";\n    s = str;\n    while(*s)\n        printf(\"%c\", *s++);\n\n    return 0;\n}", "opta": "Error", "optb": "H", "optc": "Hello", "optd": "Hel", "ans": "C", "explanation": "Step 1: const char *s = \"\"; The constant variable s is declared as an pointer to an array of characters type and initialized with an empty string.\n\n\nStep 2: char str[] = \"Hello\"; The variable str is declared as an array of charactrers type and initialized with a string \"Hello\".\n\n\nStep 3: s = str; The  value of the variable str is assigned to the variable s. Therefore str contains the text \"Hello\".\n\n\nStep 4: while(*s){ printf(\"%c\", *s++); } Here the while loop got executed untill the value of the variable s is available and it prints the each character of the variable s.\n\nHence the output of the program is \"Hello\"."}, {"question": "What will be the output of the program?\n#include<stdio.h>\nint get();\n\nint main()\n{\n    const int x = get();\n    printf(\"%d\", x);\n    return 0;\n}\nint get()\n{\n    return 20;\n}", "opta": "Garbage value", "optb": "Error", "optc": "20", "optd": "0", "ans": "C", "explanation": "Step 1: int get(); This is the function prototype for the funtion get(), it tells the compiler returns an integer value and accept no parameters.\n\n\nStep 2: const int x = get(); The constant variable x is declared as an integer data type and initialized with the value \"20\".\n\nThe function get() returns the value \"20\".\n\nStep 3: printf(\"%d\", x); It prints the value of the variable x.\n\nHence the output of the program is \"20\"."}, {"question": "What will be the output of the program (in Turbo C)?\n#include<stdio.h>\n\nint fun(int *f)\n{\n    *f = 10;\n    return 0;\n}\nint main()\n{\n    const int arr[5] = {1, 2, 3, 4, 5};\n    printf(\"Before modification arr[3] = %d\", arr[3]);\n    fun(&arr[3]);\n    printf(\"\\nAfter modification arr[3] = %d\", arr[3]);\n    return 0;\n}", "opta": "Before modification arr[3] = 4 After modification arr[3] = 10", "optb": "Error: cannot convert parameter 1 from const int * to int *", "optc": "Error: Invalid parameter", "optd": "Before modification arr[3] = 4 After modification arr[3] = 4", "ans": "A", "explanation": "Step 1: const int arr[5] = {1, 2, 3, 4, 5}; The constant variable arr is declared as an integer array and initialized to\n\n arr[0] = 1, arr[1] = 2, arr[2] = 3, arr[3] = 4, arr[4] = 5 \n\nStep 2: printf(\"Before modification arr[3] = %d\", arr[3]); It prints the value of arr[3] (ie. 4).\n\n\nStep 3: fun(&arr[3]); The memory location of the arr[3] is passed to fun() and arr[3] value is modified to 10.\n\nA const variable can be indirectly modified by a pointer.\n\nStep 4: printf(\"After modification arr[3] = %d\", arr[3]); It prints the value of arr[3] (ie. 10).\n\n\nHence the output of the program is\n\nBefore modification arr[3] = 4\nAfter modification arr[3] = 10"}, {"question": "What will be the output of the program?\n#include<stdio.h>\n\nint main()\n{\n    const int i=0;\n    printf(\"%d\\n\", i++);\n    return 0;\n}", "opta": "10", "optb": "11", "optc": "No output", "optd": "Error: ++needs a value", "ans": "D", "explanation": "This program will show an error \"Cannot modify a const object\".\n\n\nStep 1: const int i=0; The constant variable 'i' is declared as an integer and initialized with value of '0'(zero).\n\n\nStep 2: printf(\"%d\\n\", i++); Here the variable 'i' is increemented by 1(one). This will create an error \"Cannot modify a const object\".\n\nBecause, we cannot modify a const variable."}, {"question": "What will be the output of the program?\r\n#include<stdio.h>\r\n\r\nint main()\r\n{\r\n    const c = -11;\r\n    const int d = 34;\r\n    printf(\"%d, %d\\n\", c, d);\r\n    return 0;\r\n}", "opta": "Error", "optb": "-11, 34", "optc": "11, 34", "optd": "None of these", "ans": "B", "explanation": "Step 1: const c = -11; The constant variable 'c' is declared and initialized to value \"-11\".\n\n\nStep 2: const int d = 34; The constant variable 'd' is declared as an integer and initialized to value '34'.\n\n\nStep 3: printf(\"%d, %d\\n\", c, d); The value of the variable 'c' and 'd' are printed.\n\nHence the output of the program is -11, 34"}]]}