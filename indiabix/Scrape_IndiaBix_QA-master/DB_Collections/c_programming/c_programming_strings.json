{"test_questions": [[{"question": "Which of the following function sets first n characters of a string to a given character?", "opta": "strinit()", "optb": "strnset()", "optc": "strset()", "optd": "strcset()", "ans": "B", "explanation": "Declaration:\nchar *strnset(char *s, int ch, size_t n); Sets the first n characters of s to ch\n#include <stdio.h>\n#include <string.h>\n\nint main(void)\n{\n   char *string = \"abcdefghijklmnopqrstuvwxyz\";\n   char letter = 'x';\n\n   printf(\"string before strnset: %s\\n\", string);\n   strnset(string, letter, 13);\n   printf(\"string after  strnset: %s\\n\", string);\n\n   return 0;\n}\n\nOutput:\nstring before strnset: abcdefghijklmnopqrstuvwxyz\nstring after  strnset: xxxxxxxxxxxxxnopqrstuvwxyz"}, {"question": "If the two strings are identical, then strcmp() function returns", "opta": "-1", "optb": "1", "optc": "0", "optd": "Yes", "ans": "C", "explanation": "Declaration: strcmp(const char *s1, const char*s2);\nThe strcmp return an int value that is\nif s1 <  s2 returns a value < 0\nif s1 == s2 returns 0\nif s1 > s2 returns a value > 0"}, {"question": "How will you print \\n on the screen?", "opta": "printf(\"\\n\");", "optb": "echo \"\\\\n\";", "optc": "printf('\\n');", "optd": "printf(\"\\\\n\");", "ans": "D", "explanation": "The statement printf(\"\\\\n\"); prints '\\n' on the screen."}, {"question": "The library function used to find the last occurrence of a character in a string is", "opta": "strnstr()", "optb": "laststr()", "optc": "strrchr()", "optd": "strstr()", "ans": "C", "explanation": "Declaration: char *strrchr(const char *s, int c);\n It scans a string s in the reverse direction, looking for a specific character c. \nExample:\n#include <string.h>\n#include <stdio.h>\n\nint main(void)\n{\n   char text[] = \"I learn through IndiaBIX.com\";\n   char *ptr, c = 'i';\n\n   ptr = strrchr(text, c);\n   if (ptr)\n      printf(\"The position of '%c' is: %d\\n\", c, ptr-text);\n   else\n      printf(\"The character was not found\\n\");\n   return 0;\n}\n\nOutput:\nThe position of 'i' is: 19"}, {"question": "Which of the following function is used to find the first occurrence of a given string in another string?", "opta": "strchr()", "optb": "strrchr()", "optc": "strstr()", "optd": "strnset()", "ans": "C", "explanation": "The function strstr() Finds the first occurrence of a substring in another string\n\n\nDeclaration: char *strstr(const char *s1, const char *s2);\n\n\nReturn Value:\nOn success, strstr returns a pointer to the element in s1 where s2 begins (points to s2 in s1).\nOn error (if s2 does not occur in s1), strstr returns null.\n\nExample:\n#include <stdio.h>\n#include <string.h>\n\nint main(void)\n{\n   char *str1 = \"IndiaBIX\", *str2 = \"ia\", *ptr;\n\n   ptr = strstr(str1, str2);\n   printf(\"The substring is: %s\\n\", ptr);\n   return 0;\n}\n\nOutput: The substring is: iaBIX"}, {"question": "Which of the following function is more appropriate for reading in a multi-word string?", "opta": "printf();", "optb": "scanf();", "optc": "gets();", "optd": "puts();", "ans": "C", "explanation": "gets(); collects a string of characters terminated by a new line from the standard input stream stdin\n\n#include <stdio.h>\n\nint main(void)\n{\n   char string[80];\n\n   printf(\"Enter a string:\");\n   gets(string);\n   printf(\"The string input was: %s\\n\", string);\n   return 0;\n}\n\nOutput:\nEnter a string: IndiaBIX\nThe string input was: IndiaBIX"}, {"question": "Which of the following function is correct that finds the length of a string?", "opta": "int xstrlen(char *s)\n{\n    int length=0;\n    while(*s!='\\0')\n    {    length++; s++; }\n    return (length);\n}", "optb": "int xstrlen(char s)\n{\n    int length=0;\n    while(*s!='\\0')\n        length++; s++;\n    return (length);\n}", "optc": "int xstrlen(char *s)\r\n{\r\n    int length=0;\r\n    while(*s!='\\0')\r\n        length++;\r\n    return (length);\r\n}", "optd": "int xstrlen(char *s)\r\n{\r\n    int length=0;\r\n    while(*s!='\\0')\r\n        s++;\r\n    return (length);\r\n}", "ans": "A", "explanation": "Option A is the correct function to find the length of given string.\nExample:\n#include<stdio.h>\n\nint xstrlen(char *s)\n{\n    int length=0;\n    while(*s!='\\0')\n    { length++; s++; }\n    return (length);\n}\n\nint main()\n{\n    char d[] = \"IndiaBIX\";\n    printf(\"Length = %d\\n\", xstrlen(d));\n    return 0;\n}\n\nOutput: Length = 8"}]]}