{"test_questions": [[{"question": "Which of the following statements are true about the C#.NET code snippet given below?\nString s1, s2; \ns1 = \"Hi\"; \ns2 = \"Hi\";\nString objects cannot be created without using new.\nOnly one object will get created.\ns1 and s2 both will refer to the same object.\nTwo objects will get created, one pointed to by s1 and another pointed to by s2.\ns1 and s2 are references to the same object.", "opta": "1, 2, 4", "optb": "2, 3, 5", "optc": "3, 4", "optd": "2, 5", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following will be the correct output for the C#.NET code snippet given below?\nString s1 = \"ALL MEN ARE CREATED EQUAL\";\nString s2;\ns2 = s1.Substring(12, 3); \nConsole.WriteLine(s2);", "opta": "ARE", "optb": "CRE", "optc": "CR", "optd": "REA", "opte": "CREATED", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements will correctly copy the contents of one string into another ?", "opta": "String s1 = \"String\";\nString s2; \ns2 = s1;", "optb": "String s1 = \"String\" ; \nString s2;\ns2 = String.Concat(s1, s2);", "optc": "String s1 = \"String\"; \nString s2;\ns2 = String.Copy(s1);", "optd": "String s1 = \"String\"; \nString s2;\ns2 = s1.Replace();", "opte": "String s1 = \"String\"; \nString s2;\ns2 = s2.StringCopy(s1);", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "The string built using the String class are immutable (unchangeable), whereas, the ones built- using the StringBuilder class are mutable.", "opta": "True", "optb": "False", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following will be the correct output for the C#.NET code snippet given below?\nString s1 = \"Nagpur\";\nString s2;\ns2 = s1.Insert(6, \"Mumbai\"); \nConsole.WriteLine(s2);", "opta": "NagpuMumbair", "optb": "Nagpur Mumbai", "optc": "Mumbai", "optd": "Nagpur", "opte": "NagpurMumbai", "ans": "E", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "If s1 and s2 are references to two strings, then which of the following is the correct way to compare the two references?", "opta": "s1 is s2", "optb": "s1 = s2", "optc": "s1 == s2", "optd": "strcmp(s1, s2)", "opte": "s1.Equals(s2)", "ans": "E", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "What will be the output of the C#.NET code snippet given below?\nnamespace IndiabixConsoleApplication\n{\n    class SampleProgram\n    {\n        static void Main(string[ ] args)\n        {\n            string str= \"Hello World!\";\n            Console.WriteLine( String.Compare(str, \"Hello World?\" ).GetType() );\n        }\n    }\n}", "opta": "0", "optb": "1", "optc": "String", "optd": "Hello World?", "opte": "System.Int32", "ans": "E", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following snippets are the correct way to convert a Single into a String?\nSingle f = 9.8f; \nString s;\ns = (String) (f);\nSingle f = 9.8f; \nString s;\ns = Convert.ToString(f);\nSingle f = 9.8f; \nString s;\ns = f.ToString();\nSingle f = 9.8f; \nString s;\ns = Clnt(f);\nSingle f = 9.8f; \nString s;\ns = CString(f);", "opta": "1, 2", "optb": "2, 3", "optc": "1, 3, 5", "optd": "2, 4", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following will be the correct output for the C#.NET code snippet given below?\nString s1=\"Kicit\";\nConsole.Write(s1.IndexOf('c') + \" \"); \nConsole.Write(s1.Length);", "opta": "3 6", "optb": "2 5", "optc": "3 5", "optd": "2 6", "opte": "3 7", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is correct way to convert a String to an int?\nString s = \"123\"; \nint i;\ni = (int)s;\nString s = \"123\";\nint i;\ni = int.Parse(s);\nString s = \"123\"; \nint i;\ni = Int32.Parse(s);\nString s = \"123\"; \nint i;\ni = Convert.ToInt32(s);\nString s = \"123\"; \nint i;\ni = CInt(s);", "opta": "1, 3, 5", "optb": "2, 4", "optc": "3, 5", "optd": "2, 3, 4", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements about a String is correct?", "opta": "A String is created on the stack.", "optb": "Whether a String is created on the stack or the heap depends on the length of the String.", "optc": "A String is a primitive.", "optd": "A String can be created by using the statement String s1 = new String;", "opte": "A String is created on the heap.", "ans": "E", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statement is correct about a String in C#.NET?", "opta": "A String is mutable because it can be modified once it has been created.", "optb": "Methods of the String class can be used to modify the string.", "optc": "A number CANNOT be represented in the form of a String.", "optd": "A String has a zero-based index.", "opte": "The System.Array class is used to represent a string.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following will be the correct output for the C#.NET code snippet given below?\nString s1 = \"Five Star\";\nString s2 = \"FIVE STAR\";\nint c;\nc = s1.CompareTo(s2);\nConsole.WriteLine(c);", "opta": "0", "optb": "1", "optc": "2", "optd": "-1", "opte": "-2", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "If s1 and s2 are references to two strings then which of the following are the correct ways to find whether the contents of the two strings are equal?\nif(s1 = s2)\nif(s1 == s2)\nint c;\nc = s1.CompareTo(s2);\nif( strcmp(s1, s2) )\nif (s1 is s2)", "opta": "1, 2", "optb": "2, 3", "optc": "4, 5", "optd": "3, 5", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the   following statements are correct about the String Class in C#.NET?\nTwo strings can be concatenated by using an expression of the form s3 = s1 + s2;\nString is a primitive in C#.NET.\nA string built using StringBuilder Class is Mutable.\nA string built using String Class is Immutable.\nTwo strings can be concatenated by using an expression of the form s3 = s1&s2;", "opta": "1, 2, 5", "optb": "2, 4", "optc": "1, 3, 4", "optd": "3, 5", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct?\nString is a value type.\nString literals can contain any character literal including escape sequences.\nThe equality operators are defined to compare the values of string objects as well as references.\nAttempting to access a character that is outside the bounds of the string results in an IndexOutOfRangeException.\nThe contents of a string object can be changed after the object is created.", "opta": "1, 3", "optb": "3, 5", "optc": "2, 4", "optd": "1, 2, 4", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is the correct way to find out the index of the second 's' in the string \"She sells sea shells on the sea-shore\"?", "opta": "String str = \"She sells sea shells on the sea-shore\"; \nint i;\ni = str.SecondIndexOf(\"s\");", "optb": "String str = \"She sells sea shells on the sea-shore\"; \nint i, j;\ni = str.FirstIndexOf(\"s\"); \nj = str.IndexOf(\"s\", i + 1);", "optc": "String str = \"She sells sea shells on the sea-shore\"; \nint i, j;\ni = str.IndexOf(\"s\"); \nj = str.IndexOf(\"s\", i + 1);", "optd": "String str = \"She sells sea shells on the sea-shore\"; \nint i, j;\ni = str.LastIndexOf(\"s\"); \nj = str.IndexOf(\"s\", i - 1);", "opte": "String str = \"She sells sea shells on the sea-shore\"; \nint i, j;\ni = str.IndexOf(\"S\"); \nj = str.IndexOf(\"s\", i);", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}]]}