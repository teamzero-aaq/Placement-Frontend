{"test_questions": [[{"question": "Which of the following statements is correct about the C#.NET code snippet given below?\ninterface IMyInterface\n{ \n    void fun1(); \n    int fun2();\n}\nclass MyClass: IMyInterface\n{ \n    void fun1()\n    { } \n    int IMyInterface.fun2()\n    { } \n}", "opta": "A function cannot be declared inside an interface.", "optb": "A subroutine cannot be declared inside an interface.", "optc": "A Method Table will not be created for class MyClass.", "optd": "MyClass is an abstract class.", "opte": "The definition of fun1() in class MyClass should be void IMyInterface.fun1().", "ans": "E", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following can be declared in an interface?\nProperties\nMethods\nEnumerations\nEvents\nStructures", "opta": "1, 3", "optb": "1, 2, 4", "optc": "3, 5", "optd": "4, 5", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "A class implements two interfaces each containing three methods. The class contains no instance data. Which of the following correctly indicate the size of the object created from this class?", "opta": "12 bytes", "optb": "24 bytes", "optc": "0 byte", "optd": "8 bytes", "opte": "16 bytes", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about an interface used in C#.NET?", "opta": "One class can implement only one interface.", "optb": "In a program if one class implements an interface then no other class in the same program can implement this interface.", "optc": "From two base interfaces a new interface cannot be inherited.", "optd": "Properties can be declared inside an interface.", "opte": "Interfaces cannot be inherited.", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about Interfaces used in C#.NET?", "opta": "All interfaces are derived from an Object class.", "optb": "Interfaces can be inherited.", "optc": "All interfaces are derived from an Object interface.", "optd": "Interfaces can contain only method declaration.", "opte": "Interfaces can contain static data and methods.", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about an interface used in C#.NET?", "opta": "If a class implements an interface partially, then it should be an abstract class.", "optb": "A class cannot implement an interface partially.", "optc": "An interface can contain static methods.", "optd": "An interface can contain static data.", "opte": "Multiple interface inheritance is not allowed.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about an interface?", "opta": "One interface can be implemented in another interface.", "optb": "An interface can be implemented by multiple classes in the same program.", "optc": "A class that implements an interface can explicitly implement members of that interface.", "optd": "The functions declared in an interface have a body.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about an interface in C#.NET?\nA class can implement multiple interfaces.\nStructures  cannot  inherit a class  but can  implement an interface.\nIn  C#.NET,   :   is  used  to  signify that  a  class  member implements a specific interface.\nAn interface can implement multiple classes.\nThe static attribute can be used with a method that implements an interface declaration.", "opta": "1, 2, 3", "optb": "2, 4", "optc": "3, 5", "optd": "None of the above.", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is the correct implementation of the interface given below?\ninterface IMyInterface\n{ \n    double MyFun(Single i);\n}", "opta": "class MyClass\n{\n    double MyFun(Single i) as IMyInterface.MyFun\n    {\n        // Some code\n    }\n}", "optb": "class MyClass \n{\n    MyFun (Single i) As Double\n    {\n        // Some code\n    } \n}", "optc": "class MyClass: implements IMyInterface\n{\n    double fun(Single si) implements IMyInterface.MyFun()\n    {\n        //Some code\n    } \n}", "optd": "class MyClass: IMyInterface\n{\n    double IMyInterface.MyFun(Single i)\n    {\n        // Some code\n    } \n}", "ans": "D", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct?", "opta": "When   a   class   inherits   an   interface   it   inherits   member definitions as well as its implementations.", "optb": "An interface cannot contain the signature of an indexer.", "optc": "Interfaces members are automatically public.", "optd": "To implement an interface member, the corresponding member in the class must be public as well as static.", "ans": "C", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements are correct about an interface used in C#.NET?\nAn interface can contain properties, methods and events.\nThe  keyword  must implement forces  implementation  of an interface.\nInterfaces can be overloaded.\nInterfaces can be implemented by a class or a struct.\nEnhanced implementations of an interface can be developed without breaking existing code.", "opta": "1, 2", "optb": "1, 4, 5", "optc": "3, 4", "optd": "3 only", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following can implement an interface?\nData\nClass\nEnum\nStructure\nNamespace", "opta": "1, 3", "optb": "2, 4", "optc": "3, 5", "optd": "4 only", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about the C#.NET code snippet given below?\ninterface IMyInterface \n{\n    void fun1(); \n    void fun2();\n}\nclass MyClass: IMyInterface\n{ \n    private int i; \n    void IMyInterface.fun1()\n    { \n        // Some code\n    } \n}", "opta": "Class MyClass is an abstract class.", "optb": "Class MyClass cannot contain instance data.", "optc": "Class MyClass fully implements the interface IMyInterface.", "optd": "Interface IMyInterface should be inherited from the Object class.", "opte": "The compiler will report an error since the interface IMyInterface is only partially implemented.", "ans": "E", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following statements is correct about the C#.NET code snippet given below?\ninterface IPerson\n{ \n    String FirstName\n    { \n        get; \n        set;\n    }\n    String LastName\n    {\n        get; \n        set;\n    }\n    void Print(); \n    void Stock(); \n    int Fun(); \n}", "opta": "Properties cannot be declared inside an interface.", "optb": "This is a perfectly workable interface.", "optc": "The properties in the interface must have a body.", "optd": "Subroutine in the interface must have a body.", "opte": "Functions cannot be declared inside an interface.", "ans": "B", "explanation": "No answer description available for this question. Let us discuss."}, {"question": "Which of the following is the correct way to implement the interface given below?\ninterface IPerson\n{ \n    String FirstName\n    {\n        get;\n        set; \n    } \n}", "opta": "class Employee : IPerson\n{\n    private String str; \n    public String FirstName\n    {\n        get\n        { \n            return str;\n        } \n        set\n        { \n            str = value;\n        } \n    } \n}", "optb": "class Employee\n{\n    private String str;\n    public String IPerson.FirstName\n    { \n        get\n        { \n            return str;\n        } \n        set\n        { \n            str = value;\n        } \n    } \n}", "optc": "class Employee : implements IPerson\n{\n    private String str; \n    public String FirstName\n    { \n        get\n        { \n            return str;\n        } \n        set\n        {\n            str = value; \n        } \n    } \n}", "optd": "None of the above", "ans": "A", "explanation": "No answer description available for this question. Let us discuss."}]]}